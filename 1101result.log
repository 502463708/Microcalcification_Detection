nohup: ignoring input
Dataset: /home/groupprofzli/data1/dwz/data/Inbreast-radiograph-level-roi-extracted-data-split-dataset
Dataset type: test
Reconstruction model saving dir: /home/groupprofzli/data1/dwz/data/models/20191025_uCs_reconstruction_ttestlossv3_default_dilation_radius_7
Reconstruction ckpt index: -1
Classification model saving dir: /home/groupprofzli/data1/dwz/data/models/20191025_uCs_image_level_classification_CE_default
Classification ckpt index: -1
Load ckpt: /home/groupprofzli/data1/dwz/data/models/20191025_uCs_reconstruction_ttestlossv3_default_dilation_radius_7/ckpt/net_best_on_validation_set_epoch_384.pth...
Load ckpt: /home/groupprofzli/data1/dwz/data/models/20191025_uCs_image_level_classification_CE_default/ckpt/net_best_on_validation_set_epoch_354.pth...
-------------------------------------------------------------------------------------------------------
Starting checking the files in /home/groupprofzli/data1/dwz/data/Inbreast-radiograph-level-roi-extracted-data-split-dataset/test/images...
Checking passed: all of the involved 82 files are legal with extension.
-------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 1 out of 82: 20586960.png...
props length 55
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 2.5624093705210343e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 2
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 3
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 4
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 5
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 6
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 7
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 8
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 9
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 10
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 11
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 12
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 13
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 14
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 15
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 16
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 17
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 18
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 19
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 20
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 21
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 22
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 23
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 24
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 25
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 26
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 27
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 28
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 29
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 30
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 31
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 32
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 33
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 34
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 35
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 36
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 37
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 38
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 39
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 40
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 41
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 42
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 43
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 44
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 45
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 46
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 47
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 48
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 49
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 50
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 51
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 52
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 53
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 54
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
index! 55
image tensor Size:  torch.Size([1, 1, 3204, 2229])
pixel level numpy Size:  (3204, 2229)
FileName 20586960.png
done
Finished evaluating radiograph: 0, consuming time: 18.0361s
The annotated calcification number is: 8
The number of the detected positive calcifications is: 55
score_threshold = 0.0000, recall_number = 0, FP_number = 55
score_threshold = 0.1000, recall_number = 0, FP_number = 52
score_threshold = 0.2000, recall_number = 0, FP_number = 52
score_threshold = 0.3000, recall_number = 0, FP_number = 52
score_threshold = 0.4000, recall_number = 0, FP_number = 52
score_threshold = 0.5000, recall_number = 0, FP_number = 52
score_threshold = 0.6000, recall_number = 0, FP_number = 52
score_threshold = 0.7000, recall_number = 0, FP_number = 52
score_threshold = 0.8000, recall_number = 0, FP_number = 52
score_threshold = 0.9000, recall_number = 0, FP_number = 52
score_threshold = 1.0000, recall_number = 0, FP_number = 52
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 2 out of 82: 20586986.png...
props length 38
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 2.3363322325990815e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 2
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 3
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 4
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 5
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 6
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 7
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 8
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 9
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 10
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 11
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 12
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 13
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 14
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 15
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 16
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 17
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 18
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 19
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 20
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 21
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 22
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 23
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 24
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 25
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 26
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 27
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 28
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 29
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 30
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 31
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 32
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 33
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 34
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 35
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 36
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 37
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
index! 38
image tensor Size:  torch.Size([1, 1, 3774, 1894])
pixel level numpy Size:  (3774, 1894)
FileName 20586986.png
done
Finished evaluating radiograph: 1, consuming time: 13.8939s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 38
score_threshold = 0.0000, recall_number = 0, FP_number = 38
score_threshold = 0.1000, recall_number = 0, FP_number = 36
score_threshold = 0.2000, recall_number = 0, FP_number = 35
score_threshold = 0.3000, recall_number = 0, FP_number = 35
score_threshold = 0.4000, recall_number = 0, FP_number = 33
score_threshold = 0.5000, recall_number = 0, FP_number = 33
score_threshold = 0.6000, recall_number = 0, FP_number = 32
score_threshold = 0.7000, recall_number = 0, FP_number = 32
score_threshold = 0.8000, recall_number = 0, FP_number = 32
score_threshold = 0.9000, recall_number = 0, FP_number = 32
score_threshold = 1.0000, recall_number = 0, FP_number = 32
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 3 out of 82: 20587148.png...
props length 8
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 7.546836249497573e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2514, 954])
pixel level numpy Size:  (2514, 954)
FileName 20587148.png
index! 2
image tensor Size:  torch.Size([1, 1, 2514, 954])
pixel level numpy Size:  (2514, 954)
FileName 20587148.png
index! 3
image tensor Size:  torch.Size([1, 1, 2514, 954])
pixel level numpy Size:  (2514, 954)
FileName 20587148.png
index! 4
image tensor Size:  torch.Size([1, 1, 2514, 954])
pixel level numpy Size:  (2514, 954)
FileName 20587148.png
index! 5
image tensor Size:  torch.Size([1, 1, 2514, 954])
pixel level numpy Size:  (2514, 954)
FileName 20587148.png
index! 6
image tensor Size:  torch.Size([1, 1, 2514, 954])
pixel level numpy Size:  (2514, 954)
FileName 20587148.png
index! 7
image tensor Size:  torch.Size([1, 1, 2514, 954])
pixel level numpy Size:  (2514, 954)
FileName 20587148.png
index! 8
image tensor Size:  torch.Size([1, 1, 2514, 954])
pixel level numpy Size:  (2514, 954)
FileName 20587148.png
done
Finished evaluating radiograph: 2, consuming time: 4.1002s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 8
score_threshold = 0.0000, recall_number = 0, FP_number = 8
score_threshold = 0.1000, recall_number = 0, FP_number = 8
score_threshold = 0.2000, recall_number = 0, FP_number = 8
score_threshold = 0.3000, recall_number = 0, FP_number = 8
score_threshold = 0.4000, recall_number = 0, FP_number = 8
score_threshold = 0.5000, recall_number = 0, FP_number = 8
score_threshold = 0.6000, recall_number = 0, FP_number = 8
score_threshold = 0.7000, recall_number = 0, FP_number = 8
score_threshold = 0.8000, recall_number = 0, FP_number = 8
score_threshold = 0.9000, recall_number = 0, FP_number = 8
score_threshold = 1.0000, recall_number = 0, FP_number = 8
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 4 out of 82: 20587320.png...
props length 11
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.967262071165693e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2882, 1688])
pixel level numpy Size:  (2882, 1688)
FileName 20587320.png
index! 2
image tensor Size:  torch.Size([1, 1, 2882, 1688])
pixel level numpy Size:  (2882, 1688)
FileName 20587320.png
index! 3
image tensor Size:  torch.Size([1, 1, 2882, 1688])
pixel level numpy Size:  (2882, 1688)
FileName 20587320.png
index! 4
image tensor Size:  torch.Size([1, 1, 2882, 1688])
pixel level numpy Size:  (2882, 1688)
FileName 20587320.png
index! 5
image tensor Size:  torch.Size([1, 1, 2882, 1688])
pixel level numpy Size:  (2882, 1688)
FileName 20587320.png
index! 6
image tensor Size:  torch.Size([1, 1, 2882, 1688])
pixel level numpy Size:  (2882, 1688)
FileName 20587320.png
index! 7
image tensor Size:  torch.Size([1, 1, 2882, 1688])
pixel level numpy Size:  (2882, 1688)
FileName 20587320.png
index! 8
image tensor Size:  torch.Size([1, 1, 2882, 1688])
pixel level numpy Size:  (2882, 1688)
FileName 20587320.png
index! 9
image tensor Size:  torch.Size([1, 1, 2882, 1688])
pixel level numpy Size:  (2882, 1688)
FileName 20587320.png
index! 10
image tensor Size:  torch.Size([1, 1, 2882, 1688])
pixel level numpy Size:  (2882, 1688)
FileName 20587320.png
index! 11
image tensor Size:  torch.Size([1, 1, 2882, 1688])
pixel level numpy Size:  (2882, 1688)
FileName 20587320.png
done
Finished evaluating radiograph: 3, consuming time: 9.3133s
The annotated calcification number is: 1
The number of the detected positive calcifications is: 11
score_threshold = 0.0000, recall_number = 0, FP_number = 11
score_threshold = 0.1000, recall_number = 0, FP_number = 9
score_threshold = 0.2000, recall_number = 0, FP_number = 9
score_threshold = 0.3000, recall_number = 0, FP_number = 9
score_threshold = 0.4000, recall_number = 0, FP_number = 9
score_threshold = 0.5000, recall_number = 0, FP_number = 9
score_threshold = 0.6000, recall_number = 0, FP_number = 9
score_threshold = 0.7000, recall_number = 0, FP_number = 9
score_threshold = 0.8000, recall_number = 0, FP_number = 9
score_threshold = 0.9000, recall_number = 0, FP_number = 9
score_threshold = 1.0000, recall_number = 0, FP_number = 9
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 5 out of 82: 20587810.png...
props length 10
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 2.6606035752728132e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3327, 1559])
pixel level numpy Size:  (3327, 1559)
FileName 20587810.png
index! 2
image tensor Size:  torch.Size([1, 1, 3327, 1559])
pixel level numpy Size:  (3327, 1559)
FileName 20587810.png
index! 3
image tensor Size:  torch.Size([1, 1, 3327, 1559])
pixel level numpy Size:  (3327, 1559)
FileName 20587810.png
index! 4
image tensor Size:  torch.Size([1, 1, 3327, 1559])
pixel level numpy Size:  (3327, 1559)
FileName 20587810.png
index! 5
image tensor Size:  torch.Size([1, 1, 3327, 1559])
pixel level numpy Size:  (3327, 1559)
FileName 20587810.png
index! 6
image tensor Size:  torch.Size([1, 1, 3327, 1559])
pixel level numpy Size:  (3327, 1559)
FileName 20587810.png
index! 7
image tensor Size:  torch.Size([1, 1, 3327, 1559])
pixel level numpy Size:  (3327, 1559)
FileName 20587810.png
index! 8
image tensor Size:  torch.Size([1, 1, 3327, 1559])
pixel level numpy Size:  (3327, 1559)
FileName 20587810.png
index! 9
image tensor Size:  torch.Size([1, 1, 3327, 1559])
pixel level numpy Size:  (3327, 1559)
FileName 20587810.png
index! 10
image tensor Size:  torch.Size([1, 1, 3327, 1559])
pixel level numpy Size:  (3327, 1559)
FileName 20587810.png
done
Finished evaluating radiograph: 4, consuming time: 8.5867s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 10
score_threshold = 0.0000, recall_number = 0, FP_number = 10
score_threshold = 0.1000, recall_number = 0, FP_number = 6
score_threshold = 0.2000, recall_number = 0, FP_number = 6
score_threshold = 0.3000, recall_number = 0, FP_number = 6
score_threshold = 0.4000, recall_number = 0, FP_number = 6
score_threshold = 0.5000, recall_number = 0, FP_number = 6
score_threshold = 0.6000, recall_number = 0, FP_number = 5
score_threshold = 0.7000, recall_number = 0, FP_number = 5
score_threshold = 0.8000, recall_number = 0, FP_number = 5
score_threshold = 0.9000, recall_number = 0, FP_number = 5
score_threshold = 1.0000, recall_number = 0, FP_number = 5
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 6 out of 82: 20588164.png...
props length 10
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 5.120138357516505e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3327, 1268])
pixel level numpy Size:  (3327, 1268)
FileName 20588164.png
index! 2
image tensor Size:  torch.Size([1, 1, 3327, 1268])
pixel level numpy Size:  (3327, 1268)
FileName 20588164.png
index! 3
image tensor Size:  torch.Size([1, 1, 3327, 1268])
pixel level numpy Size:  (3327, 1268)
FileName 20588164.png
index! 4
image tensor Size:  torch.Size([1, 1, 3327, 1268])
pixel level numpy Size:  (3327, 1268)
FileName 20588164.png
index! 5
image tensor Size:  torch.Size([1, 1, 3327, 1268])
pixel level numpy Size:  (3327, 1268)
FileName 20588164.png
index! 6
image tensor Size:  torch.Size([1, 1, 3327, 1268])
pixel level numpy Size:  (3327, 1268)
FileName 20588164.png
index! 7
image tensor Size:  torch.Size([1, 1, 3327, 1268])
pixel level numpy Size:  (3327, 1268)
FileName 20588164.png
index! 8
image tensor Size:  torch.Size([1, 1, 3327, 1268])
pixel level numpy Size:  (3327, 1268)
FileName 20588164.png
index! 9
image tensor Size:  torch.Size([1, 1, 3327, 1268])
pixel level numpy Size:  (3327, 1268)
FileName 20588164.png
index! 10
image tensor Size:  torch.Size([1, 1, 3327, 1268])
pixel level numpy Size:  (3327, 1268)
FileName 20588164.png
done
Finished evaluating radiograph: 5, consuming time: 6.7619s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 10
score_threshold = 0.0000, recall_number = 0, FP_number = 10
score_threshold = 0.1000, recall_number = 0, FP_number = 7
score_threshold = 0.2000, recall_number = 0, FP_number = 7
score_threshold = 0.3000, recall_number = 0, FP_number = 7
score_threshold = 0.4000, recall_number = 0, FP_number = 7
score_threshold = 0.5000, recall_number = 0, FP_number = 7
score_threshold = 0.6000, recall_number = 0, FP_number = 7
score_threshold = 0.7000, recall_number = 0, FP_number = 7
score_threshold = 0.8000, recall_number = 0, FP_number = 7
score_threshold = 0.9000, recall_number = 0, FP_number = 7
score_threshold = 1.0000, recall_number = 0, FP_number = 7
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 7 out of 82: 20588190.png...
props length 4
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.673124787561813e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3010, 1212])
pixel level numpy Size:  (3010, 1212)
FileName 20588190.png
index! 2
image tensor Size:  torch.Size([1, 1, 3010, 1212])
pixel level numpy Size:  (3010, 1212)
FileName 20588190.png
index! 3
image tensor Size:  torch.Size([1, 1, 3010, 1212])
pixel level numpy Size:  (3010, 1212)
FileName 20588190.png
index! 4
image tensor Size:  torch.Size([1, 1, 3010, 1212])
pixel level numpy Size:  (3010, 1212)
FileName 20588190.png
done
Finished evaluating radiograph: 6, consuming time: 5.3936s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 4
score_threshold = 0.0000, recall_number = 0, FP_number = 4
score_threshold = 0.1000, recall_number = 0, FP_number = 2
score_threshold = 0.2000, recall_number = 0, FP_number = 2
score_threshold = 0.3000, recall_number = 0, FP_number = 2
score_threshold = 0.4000, recall_number = 0, FP_number = 2
score_threshold = 0.5000, recall_number = 0, FP_number = 2
score_threshold = 0.6000, recall_number = 0, FP_number = 2
score_threshold = 0.7000, recall_number = 0, FP_number = 2
score_threshold = 0.8000, recall_number = 0, FP_number = 2
score_threshold = 0.9000, recall_number = 0, FP_number = 2
score_threshold = 1.0000, recall_number = 0, FP_number = 2
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 8 out of 82: 20588458.png...
props length 8
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 6.519046480801408e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2707, 1513])
pixel level numpy Size:  (2707, 1513)
FileName 20588458.png
index! 2
image tensor Size:  torch.Size([1, 1, 2707, 1513])
pixel level numpy Size:  (2707, 1513)
FileName 20588458.png
index! 3
image tensor Size:  torch.Size([1, 1, 2707, 1513])
pixel level numpy Size:  (2707, 1513)
FileName 20588458.png
index! 4
image tensor Size:  torch.Size([1, 1, 2707, 1513])
pixel level numpy Size:  (2707, 1513)
FileName 20588458.png
index! 5
image tensor Size:  torch.Size([1, 1, 2707, 1513])
pixel level numpy Size:  (2707, 1513)
FileName 20588458.png
index! 6
image tensor Size:  torch.Size([1, 1, 2707, 1513])
pixel level numpy Size:  (2707, 1513)
FileName 20588458.png
index! 7
image tensor Size:  torch.Size([1, 1, 2707, 1513])
pixel level numpy Size:  (2707, 1513)
FileName 20588458.png
index! 8
image tensor Size:  torch.Size([1, 1, 2707, 1513])
pixel level numpy Size:  (2707, 1513)
FileName 20588458.png
done
Finished evaluating radiograph: 7, consuming time: 6.9059s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 8
score_threshold = 0.0000, recall_number = 0, FP_number = 8
score_threshold = 0.1000, recall_number = 0, FP_number = 7
score_threshold = 0.2000, recall_number = 0, FP_number = 7
score_threshold = 0.3000, recall_number = 0, FP_number = 7
score_threshold = 0.4000, recall_number = 0, FP_number = 7
score_threshold = 0.5000, recall_number = 0, FP_number = 7
score_threshold = 0.6000, recall_number = 0, FP_number = 7
score_threshold = 0.7000, recall_number = 0, FP_number = 7
score_threshold = 0.8000, recall_number = 0, FP_number = 7
score_threshold = 0.9000, recall_number = 0, FP_number = 7
score_threshold = 1.0000, recall_number = 0, FP_number = 7
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 9 out of 82: 20588680.png...
props length 7
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.216541932881904e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3447, 1876])
pixel level numpy Size:  (3447, 1876)
FileName 20588680.png
index! 2
image tensor Size:  torch.Size([1, 1, 3447, 1876])
pixel level numpy Size:  (3447, 1876)
FileName 20588680.png
index! 3
image tensor Size:  torch.Size([1, 1, 3447, 1876])
pixel level numpy Size:  (3447, 1876)
FileName 20588680.png
index! 4
image tensor Size:  torch.Size([1, 1, 3447, 1876])
pixel level numpy Size:  (3447, 1876)
FileName 20588680.png
index! 5
image tensor Size:  torch.Size([1, 1, 3447, 1876])
pixel level numpy Size:  (3447, 1876)
FileName 20588680.png
index! 6
image tensor Size:  torch.Size([1, 1, 3447, 1876])
pixel level numpy Size:  (3447, 1876)
FileName 20588680.png
index! 7
image tensor Size:  torch.Size([1, 1, 3447, 1876])
pixel level numpy Size:  (3447, 1876)
FileName 20588680.png
done
Finished evaluating radiograph: 8, consuming time: 10.0608s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 7
score_threshold = 0.0000, recall_number = 0, FP_number = 7
score_threshold = 0.1000, recall_number = 0, FP_number = 5
score_threshold = 0.2000, recall_number = 0, FP_number = 5
score_threshold = 0.3000, recall_number = 0, FP_number = 5
score_threshold = 0.4000, recall_number = 0, FP_number = 5
score_threshold = 0.5000, recall_number = 0, FP_number = 5
score_threshold = 0.6000, recall_number = 0, FP_number = 5
score_threshold = 0.7000, recall_number = 0, FP_number = 5
score_threshold = 0.8000, recall_number = 0, FP_number = 5
score_threshold = 0.9000, recall_number = 0, FP_number = 5
score_threshold = 1.0000, recall_number = 0, FP_number = 5
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 10 out of 82: 22427840.png...
props length 5
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 5.369554198132254e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2395, 972])
pixel level numpy Size:  (2395, 972)
FileName 22427840.png
index! 2
image tensor Size:  torch.Size([1, 1, 2395, 972])
pixel level numpy Size:  (2395, 972)
FileName 22427840.png
index! 3
image tensor Size:  torch.Size([1, 1, 2395, 972])
pixel level numpy Size:  (2395, 972)
FileName 22427840.png
index! 4
image tensor Size:  torch.Size([1, 1, 2395, 972])
pixel level numpy Size:  (2395, 972)
FileName 22427840.png
index! 5
image tensor Size:  torch.Size([1, 1, 2395, 972])
pixel level numpy Size:  (2395, 972)
FileName 22427840.png
done
Finished evaluating radiograph: 9, consuming time: 3.9114s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 5
score_threshold = 0.0000, recall_number = 0, FP_number = 5
score_threshold = 0.1000, recall_number = 0, FP_number = 4
score_threshold = 0.2000, recall_number = 0, FP_number = 4
score_threshold = 0.3000, recall_number = 0, FP_number = 4
score_threshold = 0.4000, recall_number = 0, FP_number = 4
score_threshold = 0.5000, recall_number = 0, FP_number = 4
score_threshold = 0.6000, recall_number = 0, FP_number = 4
score_threshold = 0.7000, recall_number = 0, FP_number = 4
score_threshold = 0.8000, recall_number = 0, FP_number = 4
score_threshold = 0.9000, recall_number = 0, FP_number = 4
score_threshold = 1.0000, recall_number = 0, FP_number = 4
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 11 out of 82: 22579916.png...
props length 19
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 6.203270037736147e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 2
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 3
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 4
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 5
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 6
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 7
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 8
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 9
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 10
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 11
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 12
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 13
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 14
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 15
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 16
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 17
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 18
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
index! 19
image tensor Size:  torch.Size([1, 1, 2973, 1361])
pixel level numpy Size:  (2973, 1361)
FileName 22579916.png
done
Finished evaluating radiograph: 10, consuming time: 8.4753s
The annotated calcification number is: 1
The number of the detected positive calcifications is: 19
score_threshold = 0.0000, recall_number = 0, FP_number = 19
score_threshold = 0.1000, recall_number = 0, FP_number = 19
score_threshold = 0.2000, recall_number = 0, FP_number = 19
score_threshold = 0.3000, recall_number = 0, FP_number = 19
score_threshold = 0.4000, recall_number = 0, FP_number = 19
score_threshold = 0.5000, recall_number = 0, FP_number = 19
score_threshold = 0.6000, recall_number = 0, FP_number = 19
score_threshold = 0.7000, recall_number = 0, FP_number = 19
score_threshold = 0.8000, recall_number = 0, FP_number = 19
score_threshold = 0.9000, recall_number = 0, FP_number = 19
score_threshold = 1.0000, recall_number = 0, FP_number = 19
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 12 out of 82: 22580068.png...
props length 34
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 2.639062476077201e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 2
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 3
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 4
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 5
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 6
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 7
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 8
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 9
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 10
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 11
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 12
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 13
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 14
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 15
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 16
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 17
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 18
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 19
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 20
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 21
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 22
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 23
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 24
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 25
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 26
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 27
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 28
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 29
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 30
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 31
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 32
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 33
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
index! 34
image tensor Size:  torch.Size([1, 1, 3327, 1492])
pixel level numpy Size:  (3327, 1492)
FileName 22580068.png
done
Finished evaluating radiograph: 11, consuming time: 11.8394s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 34
score_threshold = 0.0000, recall_number = 0, FP_number = 34
score_threshold = 0.1000, recall_number = 0, FP_number = 30
score_threshold = 0.2000, recall_number = 0, FP_number = 29
score_threshold = 0.3000, recall_number = 0, FP_number = 29
score_threshold = 0.4000, recall_number = 0, FP_number = 29
score_threshold = 0.5000, recall_number = 0, FP_number = 29
score_threshold = 0.6000, recall_number = 0, FP_number = 29
score_threshold = 0.7000, recall_number = 0, FP_number = 29
score_threshold = 0.8000, recall_number = 0, FP_number = 29
score_threshold = 0.9000, recall_number = 0, FP_number = 29
score_threshold = 1.0000, recall_number = 0, FP_number = 29
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 13 out of 82: 22580270.png...
props length 13
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.141014555091917e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3237, 1672])
pixel level numpy Size:  (3237, 1672)
FileName 22580270.png
index! 2
image tensor Size:  torch.Size([1, 1, 3237, 1672])
pixel level numpy Size:  (3237, 1672)
FileName 22580270.png
index! 3
image tensor Size:  torch.Size([1, 1, 3237, 1672])
pixel level numpy Size:  (3237, 1672)
FileName 22580270.png
index! 4
image tensor Size:  torch.Size([1, 1, 3237, 1672])
pixel level numpy Size:  (3237, 1672)
FileName 22580270.png
index! 5
image tensor Size:  torch.Size([1, 1, 3237, 1672])
pixel level numpy Size:  (3237, 1672)
FileName 22580270.png
index! 6
image tensor Size:  torch.Size([1, 1, 3237, 1672])
pixel level numpy Size:  (3237, 1672)
FileName 22580270.png
index! 7
image tensor Size:  torch.Size([1, 1, 3237, 1672])
pixel level numpy Size:  (3237, 1672)
FileName 22580270.png
index! 8
image tensor Size:  torch.Size([1, 1, 3237, 1672])
pixel level numpy Size:  (3237, 1672)
FileName 22580270.png
index! 9
image tensor Size:  torch.Size([1, 1, 3237, 1672])
pixel level numpy Size:  (3237, 1672)
FileName 22580270.png
index! 10
image tensor Size:  torch.Size([1, 1, 3237, 1672])
pixel level numpy Size:  (3237, 1672)
FileName 22580270.png
index! 11
image tensor Size:  torch.Size([1, 1, 3237, 1672])
pixel level numpy Size:  (3237, 1672)
FileName 22580270.png
index! 12
image tensor Size:  torch.Size([1, 1, 3237, 1672])
pixel level numpy Size:  (3237, 1672)
FileName 22580270.png
index! 13
image tensor Size:  torch.Size([1, 1, 3237, 1672])
pixel level numpy Size:  (3237, 1672)
FileName 22580270.png
done
Finished evaluating radiograph: 12, consuming time: 8.8593s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 13
score_threshold = 0.0000, recall_number = 0, FP_number = 13
score_threshold = 0.1000, recall_number = 0, FP_number = 7
score_threshold = 0.2000, recall_number = 0, FP_number = 6
score_threshold = 0.3000, recall_number = 0, FP_number = 6
score_threshold = 0.4000, recall_number = 0, FP_number = 6
score_threshold = 0.5000, recall_number = 0, FP_number = 6
score_threshold = 0.6000, recall_number = 0, FP_number = 6
score_threshold = 0.7000, recall_number = 0, FP_number = 6
score_threshold = 0.8000, recall_number = 0, FP_number = 6
score_threshold = 0.9000, recall_number = 0, FP_number = 6
score_threshold = 1.0000, recall_number = 0, FP_number = 6
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 14 out of 82: 22613650.png...
props length 10
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 6.860406966562737e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2597, 1493])
pixel level numpy Size:  (2597, 1493)
FileName 22613650.png
index! 2
image tensor Size:  torch.Size([1, 1, 2597, 1493])
pixel level numpy Size:  (2597, 1493)
FileName 22613650.png
index! 3
image tensor Size:  torch.Size([1, 1, 2597, 1493])
pixel level numpy Size:  (2597, 1493)
FileName 22613650.png
index! 4
image tensor Size:  torch.Size([1, 1, 2597, 1493])
pixel level numpy Size:  (2597, 1493)
FileName 22613650.png
index! 5
image tensor Size:  torch.Size([1, 1, 2597, 1493])
pixel level numpy Size:  (2597, 1493)
FileName 22613650.png
index! 6
image tensor Size:  torch.Size([1, 1, 2597, 1493])
pixel level numpy Size:  (2597, 1493)
FileName 22613650.png
index! 7
image tensor Size:  torch.Size([1, 1, 2597, 1493])
pixel level numpy Size:  (2597, 1493)
FileName 22613650.png
index! 8
image tensor Size:  torch.Size([1, 1, 2597, 1493])
pixel level numpy Size:  (2597, 1493)
FileName 22613650.png
index! 9
image tensor Size:  torch.Size([1, 1, 2597, 1493])
pixel level numpy Size:  (2597, 1493)
FileName 22613650.png
index! 10
image tensor Size:  torch.Size([1, 1, 2597, 1493])
pixel level numpy Size:  (2597, 1493)
FileName 22613650.png
done
Finished evaluating radiograph: 13, consuming time: 6.4322s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 10
score_threshold = 0.0000, recall_number = 0, FP_number = 10
score_threshold = 0.1000, recall_number = 0, FP_number = 7
score_threshold = 0.2000, recall_number = 0, FP_number = 7
score_threshold = 0.3000, recall_number = 0, FP_number = 7
score_threshold = 0.4000, recall_number = 0, FP_number = 7
score_threshold = 0.5000, recall_number = 0, FP_number = 7
score_threshold = 0.6000, recall_number = 0, FP_number = 7
score_threshold = 0.7000, recall_number = 0, FP_number = 7
score_threshold = 0.8000, recall_number = 0, FP_number = 7
score_threshold = 0.9000, recall_number = 0, FP_number = 7
score_threshold = 1.0000, recall_number = 0, FP_number = 7
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 15 out of 82: 22613848.png...
props length 8
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.408152151766497e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3430, 1574])
pixel level numpy Size:  (3430, 1574)
FileName 22613848.png
index! 2
image tensor Size:  torch.Size([1, 1, 3430, 1574])
pixel level numpy Size:  (3430, 1574)
FileName 22613848.png
index! 3
image tensor Size:  torch.Size([1, 1, 3430, 1574])
pixel level numpy Size:  (3430, 1574)
FileName 22613848.png
index! 4
image tensor Size:  torch.Size([1, 1, 3430, 1574])
pixel level numpy Size:  (3430, 1574)
FileName 22613848.png
index! 5
image tensor Size:  torch.Size([1, 1, 3430, 1574])
pixel level numpy Size:  (3430, 1574)
FileName 22613848.png
index! 6
image tensor Size:  torch.Size([1, 1, 3430, 1574])
pixel level numpy Size:  (3430, 1574)
FileName 22613848.png
index! 7
image tensor Size:  torch.Size([1, 1, 3430, 1574])
pixel level numpy Size:  (3430, 1574)
FileName 22613848.png
index! 8
image tensor Size:  torch.Size([1, 1, 3430, 1574])
pixel level numpy Size:  (3430, 1574)
FileName 22613848.png
done
Finished evaluating radiograph: 14, consuming time: 9.4690s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 8
score_threshold = 0.0000, recall_number = 0, FP_number = 8
score_threshold = 0.1000, recall_number = 0, FP_number = 3
score_threshold = 0.2000, recall_number = 0, FP_number = 3
score_threshold = 0.3000, recall_number = 0, FP_number = 3
score_threshold = 0.4000, recall_number = 0, FP_number = 3
score_threshold = 0.5000, recall_number = 0, FP_number = 3
score_threshold = 0.6000, recall_number = 0, FP_number = 3
score_threshold = 0.7000, recall_number = 0, FP_number = 3
score_threshold = 0.8000, recall_number = 0, FP_number = 3
score_threshold = 0.9000, recall_number = 0, FP_number = 3
score_threshold = 1.0000, recall_number = 0, FP_number = 3
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 16 out of 82: 22614074.png...
props length 10
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 1.9857711553633594e-05
index! 1
image tensor Size:  torch.Size([1, 1, 4071, 2474])
pixel level numpy Size:  (4071, 2474)
FileName 22614074.png
index! 2
image tensor Size:  torch.Size([1, 1, 4071, 2474])
pixel level numpy Size:  (4071, 2474)
FileName 22614074.png
index! 3
image tensor Size:  torch.Size([1, 1, 4071, 2474])
pixel level numpy Size:  (4071, 2474)
FileName 22614074.png
index! 4
image tensor Size:  torch.Size([1, 1, 4071, 2474])
pixel level numpy Size:  (4071, 2474)
FileName 22614074.png
index! 5
image tensor Size:  torch.Size([1, 1, 4071, 2474])
pixel level numpy Size:  (4071, 2474)
FileName 22614074.png
index! 6
image tensor Size:  torch.Size([1, 1, 4071, 2474])
pixel level numpy Size:  (4071, 2474)
FileName 22614074.png
index! 7
image tensor Size:  torch.Size([1, 1, 4071, 2474])
pixel level numpy Size:  (4071, 2474)
FileName 22614074.png
index! 8
image tensor Size:  torch.Size([1, 1, 4071, 2474])
pixel level numpy Size:  (4071, 2474)
FileName 22614074.png
index! 9
image tensor Size:  torch.Size([1, 1, 4071, 2474])
pixel level numpy Size:  (4071, 2474)
FileName 22614074.png
index! 10
image tensor Size:  torch.Size([1, 1, 4071, 2474])
pixel level numpy Size:  (4071, 2474)
FileName 22614074.png
done
Finished evaluating radiograph: 15, consuming time: 14.7776s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 10
score_threshold = 0.0000, recall_number = 0, FP_number = 10
score_threshold = 0.1000, recall_number = 0, FP_number = 9
score_threshold = 0.2000, recall_number = 0, FP_number = 9
score_threshold = 0.3000, recall_number = 0, FP_number = 9
score_threshold = 0.4000, recall_number = 0, FP_number = 9
score_threshold = 0.5000, recall_number = 0, FP_number = 9
score_threshold = 0.6000, recall_number = 0, FP_number = 9
score_threshold = 0.7000, recall_number = 0, FP_number = 9
score_threshold = 0.8000, recall_number = 0, FP_number = 9
score_threshold = 0.9000, recall_number = 0, FP_number = 9
score_threshold = 1.0000, recall_number = 0, FP_number = 9
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 17 out of 82: 22614097.png...
props length 9
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 1.907288549377855e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3584, 2721])
pixel level numpy Size:  (3584, 2721)
FileName 22614097.png
index! 2
image tensor Size:  torch.Size([1, 1, 3584, 2721])
pixel level numpy Size:  (3584, 2721)
FileName 22614097.png
index! 3
image tensor Size:  torch.Size([1, 1, 3584, 2721])
pixel level numpy Size:  (3584, 2721)
FileName 22614097.png
index! 4
image tensor Size:  torch.Size([1, 1, 3584, 2721])
pixel level numpy Size:  (3584, 2721)
FileName 22614097.png
index! 5
image tensor Size:  torch.Size([1, 1, 3584, 2721])
pixel level numpy Size:  (3584, 2721)
FileName 22614097.png
index! 6
image tensor Size:  torch.Size([1, 1, 3584, 2721])
pixel level numpy Size:  (3584, 2721)
FileName 22614097.png
index! 7
image tensor Size:  torch.Size([1, 1, 3584, 2721])
pixel level numpy Size:  (3584, 2721)
FileName 22614097.png
index! 8
image tensor Size:  torch.Size([1, 1, 3584, 2721])
pixel level numpy Size:  (3584, 2721)
FileName 22614097.png
index! 9
image tensor Size:  torch.Size([1, 1, 3584, 2721])
pixel level numpy Size:  (3584, 2721)
FileName 22614097.png
done
Finished evaluating radiograph: 16, consuming time: 14.8150s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 9
score_threshold = 0.0000, recall_number = 0, FP_number = 9
score_threshold = 0.1000, recall_number = 0, FP_number = 8
score_threshold = 0.2000, recall_number = 0, FP_number = 8
score_threshold = 0.3000, recall_number = 0, FP_number = 8
score_threshold = 0.4000, recall_number = 0, FP_number = 8
score_threshold = 0.5000, recall_number = 0, FP_number = 8
score_threshold = 0.6000, recall_number = 0, FP_number = 8
score_threshold = 0.7000, recall_number = 0, FP_number = 8
score_threshold = 0.8000, recall_number = 0, FP_number = 8
score_threshold = 0.9000, recall_number = 0, FP_number = 8
score_threshold = 1.0000, recall_number = 0, FP_number = 8
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 18 out of 82: 22614150.png...
props length 17
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 1.6079679541445375e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 2
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 3
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 4
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 5
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 6
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 7
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 8
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 9
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 10
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 11
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 12
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 13
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 14
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 15
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 16
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
index! 17
image tensor Size:  torch.Size([1, 1, 3530, 2396])
pixel level numpy Size:  (3530, 2396)
FileName 22614150.png
done
Finished evaluating radiograph: 17, consuming time: 13.8344s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 17
score_threshold = 0.0000, recall_number = 0, FP_number = 17
score_threshold = 0.1000, recall_number = 0, FP_number = 14
score_threshold = 0.2000, recall_number = 0, FP_number = 14
score_threshold = 0.3000, recall_number = 0, FP_number = 14
score_threshold = 0.4000, recall_number = 0, FP_number = 14
score_threshold = 0.5000, recall_number = 0, FP_number = 14
score_threshold = 0.6000, recall_number = 0, FP_number = 14
score_threshold = 0.7000, recall_number = 0, FP_number = 14
score_threshold = 0.8000, recall_number = 0, FP_number = 14
score_threshold = 0.9000, recall_number = 0, FP_number = 14
score_threshold = 1.0000, recall_number = 0, FP_number = 14
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 19 out of 82: 22614266.png...
props length 5
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 4.5404801266677534e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3205, 1340])
pixel level numpy Size:  (3205, 1340)
FileName 22614266.png
index! 2
image tensor Size:  torch.Size([1, 1, 3205, 1340])
pixel level numpy Size:  (3205, 1340)
FileName 22614266.png
index! 3
image tensor Size:  torch.Size([1, 1, 3205, 1340])
pixel level numpy Size:  (3205, 1340)
FileName 22614266.png
index! 4
image tensor Size:  torch.Size([1, 1, 3205, 1340])
pixel level numpy Size:  (3205, 1340)
FileName 22614266.png
index! 5
image tensor Size:  torch.Size([1, 1, 3205, 1340])
pixel level numpy Size:  (3205, 1340)
FileName 22614266.png
done
Finished evaluating radiograph: 18, consuming time: 6.7832s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 5
score_threshold = 0.0000, recall_number = 0, FP_number = 5
score_threshold = 0.1000, recall_number = 0, FP_number = 4
score_threshold = 0.2000, recall_number = 0, FP_number = 4
score_threshold = 0.3000, recall_number = 0, FP_number = 4
score_threshold = 0.4000, recall_number = 0, FP_number = 4
score_threshold = 0.5000, recall_number = 0, FP_number = 4
score_threshold = 0.6000, recall_number = 0, FP_number = 4
score_threshold = 0.7000, recall_number = 0, FP_number = 4
score_threshold = 0.8000, recall_number = 0, FP_number = 4
score_threshold = 0.9000, recall_number = 0, FP_number = 4
score_threshold = 1.0000, recall_number = 0, FP_number = 4
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 20 out of 82: 22670124.png...
props length 14
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 2.452461771445407e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3302, 1877])
pixel level numpy Size:  (3302, 1877)
FileName 22670124.png
index! 2
image tensor Size:  torch.Size([1, 1, 3302, 1877])
pixel level numpy Size:  (3302, 1877)
FileName 22670124.png
index! 3
image tensor Size:  torch.Size([1, 1, 3302, 1877])
pixel level numpy Size:  (3302, 1877)
FileName 22670124.png
index! 4
image tensor Size:  torch.Size([1, 1, 3302, 1877])
pixel level numpy Size:  (3302, 1877)
FileName 22670124.png
index! 5
image tensor Size:  torch.Size([1, 1, 3302, 1877])
pixel level numpy Size:  (3302, 1877)
FileName 22670124.png
index! 6
image tensor Size:  torch.Size([1, 1, 3302, 1877])
pixel level numpy Size:  (3302, 1877)
FileName 22670124.png
index! 7
image tensor Size:  torch.Size([1, 1, 3302, 1877])
pixel level numpy Size:  (3302, 1877)
FileName 22670124.png
index! 8
image tensor Size:  torch.Size([1, 1, 3302, 1877])
pixel level numpy Size:  (3302, 1877)
FileName 22670124.png
index! 9
image tensor Size:  torch.Size([1, 1, 3302, 1877])
pixel level numpy Size:  (3302, 1877)
FileName 22670124.png
index! 10
image tensor Size:  torch.Size([1, 1, 3302, 1877])
pixel level numpy Size:  (3302, 1877)
FileName 22670124.png
index! 11
image tensor Size:  torch.Size([1, 1, 3302, 1877])
pixel level numpy Size:  (3302, 1877)
FileName 22670124.png
index! 12
image tensor Size:  torch.Size([1, 1, 3302, 1877])
pixel level numpy Size:  (3302, 1877)
FileName 22670124.png
index! 13
image tensor Size:  torch.Size([1, 1, 3302, 1877])
pixel level numpy Size:  (3302, 1877)
FileName 22670124.png
index! 14
image tensor Size:  torch.Size([1, 1, 3302, 1877])
pixel level numpy Size:  (3302, 1877)
FileName 22670124.png
done
Finished evaluating radiograph: 19, consuming time: 9.8254s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 14
score_threshold = 0.0000, recall_number = 0, FP_number = 14
score_threshold = 0.1000, recall_number = 0, FP_number = 9
score_threshold = 0.2000, recall_number = 0, FP_number = 9
score_threshold = 0.3000, recall_number = 0, FP_number = 9
score_threshold = 0.4000, recall_number = 0, FP_number = 9
score_threshold = 0.5000, recall_number = 0, FP_number = 9
score_threshold = 0.6000, recall_number = 0, FP_number = 9
score_threshold = 0.7000, recall_number = 0, FP_number = 9
score_threshold = 0.8000, recall_number = 0, FP_number = 9
score_threshold = 0.9000, recall_number = 0, FP_number = 9
score_threshold = 1.0000, recall_number = 0, FP_number = 9
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 21 out of 82: 22670177.png...
props length 23
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.068020994500655e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 2
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 3
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 4
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 5
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 6
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 7
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 8
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 9
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 10
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 11
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 12
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 13
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 14
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 15
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 16
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 17
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 18
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 19
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 20
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 21
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 22
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
index! 23
image tensor Size:  torch.Size([1, 1, 3242, 1870])
pixel level numpy Size:  (3242, 1870)
FileName 22670177.png
done
Finished evaluating radiograph: 20, consuming time: 10.9157s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 23
score_threshold = 0.0000, recall_number = 0, FP_number = 23
score_threshold = 0.1000, recall_number = 0, FP_number = 18
score_threshold = 0.2000, recall_number = 0, FP_number = 18
score_threshold = 0.3000, recall_number = 0, FP_number = 18
score_threshold = 0.4000, recall_number = 0, FP_number = 18
score_threshold = 0.5000, recall_number = 0, FP_number = 18
score_threshold = 0.6000, recall_number = 0, FP_number = 18
score_threshold = 0.7000, recall_number = 0, FP_number = 18
score_threshold = 0.8000, recall_number = 0, FP_number = 18
score_threshold = 0.9000, recall_number = 0, FP_number = 18
score_threshold = 1.0000, recall_number = 0, FP_number = 18
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 22 out of 82: 22670278.png...
props length 31
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 4.840944868703108e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 2
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 3
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 4
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 5
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 6
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 7
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 8
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 9
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 10
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 11
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 12
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 13
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 14
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 15
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 16
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 17
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 18
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 19
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 20
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 21
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 22
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 23
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 24
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 25
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 26
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 27
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 28
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 29
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 30
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
index! 31
image tensor Size:  torch.Size([1, 1, 3072, 1244])
pixel level numpy Size:  (3072, 1244)
FileName 22670278.png
done
Finished evaluating radiograph: 21, consuming time: 9.4991s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 31
score_threshold = 0.0000, recall_number = 0, FP_number = 31
score_threshold = 0.1000, recall_number = 0, FP_number = 27
score_threshold = 0.2000, recall_number = 0, FP_number = 27
score_threshold = 0.3000, recall_number = 0, FP_number = 27
score_threshold = 0.4000, recall_number = 0, FP_number = 27
score_threshold = 0.5000, recall_number = 0, FP_number = 26
score_threshold = 0.6000, recall_number = 0, FP_number = 26
score_threshold = 0.7000, recall_number = 0, FP_number = 26
score_threshold = 0.8000, recall_number = 0, FP_number = 26
score_threshold = 0.9000, recall_number = 0, FP_number = 26
score_threshold = 1.0000, recall_number = 0, FP_number = 26
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 23 out of 82: 22670488.png...
props length 12
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 4.4537870765865606e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3327, 1262])
pixel level numpy Size:  (3327, 1262)
FileName 22670488.png
index! 2
image tensor Size:  torch.Size([1, 1, 3327, 1262])
pixel level numpy Size:  (3327, 1262)
FileName 22670488.png
index! 3
image tensor Size:  torch.Size([1, 1, 3327, 1262])
pixel level numpy Size:  (3327, 1262)
FileName 22670488.png
index! 4
image tensor Size:  torch.Size([1, 1, 3327, 1262])
pixel level numpy Size:  (3327, 1262)
FileName 22670488.png
index! 5
image tensor Size:  torch.Size([1, 1, 3327, 1262])
pixel level numpy Size:  (3327, 1262)
FileName 22670488.png
index! 6
image tensor Size:  torch.Size([1, 1, 3327, 1262])
pixel level numpy Size:  (3327, 1262)
FileName 22670488.png
index! 7
image tensor Size:  torch.Size([1, 1, 3327, 1262])
pixel level numpy Size:  (3327, 1262)
FileName 22670488.png
index! 8
image tensor Size:  torch.Size([1, 1, 3327, 1262])
pixel level numpy Size:  (3327, 1262)
FileName 22670488.png
index! 9
image tensor Size:  torch.Size([1, 1, 3327, 1262])
pixel level numpy Size:  (3327, 1262)
FileName 22670488.png
index! 10
image tensor Size:  torch.Size([1, 1, 3327, 1262])
pixel level numpy Size:  (3327, 1262)
FileName 22670488.png
index! 11
image tensor Size:  torch.Size([1, 1, 3327, 1262])
pixel level numpy Size:  (3327, 1262)
FileName 22670488.png
index! 12
image tensor Size:  torch.Size([1, 1, 3327, 1262])
pixel level numpy Size:  (3327, 1262)
FileName 22670488.png
done
Finished evaluating radiograph: 22, consuming time: 7.0450s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 12
score_threshold = 0.0000, recall_number = 0, FP_number = 12
score_threshold = 0.1000, recall_number = 0, FP_number = 8
score_threshold = 0.2000, recall_number = 0, FP_number = 8
score_threshold = 0.3000, recall_number = 0, FP_number = 8
score_threshold = 0.4000, recall_number = 0, FP_number = 8
score_threshold = 0.5000, recall_number = 0, FP_number = 8
score_threshold = 0.6000, recall_number = 0, FP_number = 8
score_threshold = 0.7000, recall_number = 0, FP_number = 8
score_threshold = 0.8000, recall_number = 0, FP_number = 8
score_threshold = 0.9000, recall_number = 0, FP_number = 8
score_threshold = 1.0000, recall_number = 0, FP_number = 8
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 24 out of 82: 22670673.png...
props length 4
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 2.617366989008498e-05
index! 1
image tensor Size:  torch.Size([1, 1, 4071, 1877])
pixel level numpy Size:  (4071, 1877)
FileName 22670673.png
index! 2
image tensor Size:  torch.Size([1, 1, 4071, 1877])
pixel level numpy Size:  (4071, 1877)
FileName 22670673.png
index! 3
image tensor Size:  torch.Size([1, 1, 4071, 1877])
pixel level numpy Size:  (4071, 1877)
FileName 22670673.png
index! 4
image tensor Size:  torch.Size([1, 1, 4071, 1877])
pixel level numpy Size:  (4071, 1877)
FileName 22670673.png
done
Finished evaluating radiograph: 23, consuming time: 10.3124s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 4
score_threshold = 0.0000, recall_number = 0, FP_number = 4
score_threshold = 0.1000, recall_number = 0, FP_number = 4
score_threshold = 0.2000, recall_number = 0, FP_number = 3
score_threshold = 0.3000, recall_number = 0, FP_number = 3
score_threshold = 0.4000, recall_number = 0, FP_number = 3
score_threshold = 0.5000, recall_number = 0, FP_number = 3
score_threshold = 0.6000, recall_number = 0, FP_number = 3
score_threshold = 0.7000, recall_number = 0, FP_number = 3
score_threshold = 0.8000, recall_number = 0, FP_number = 3
score_threshold = 0.9000, recall_number = 0, FP_number = 3
score_threshold = 1.0000, recall_number = 0, FP_number = 3
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 25 out of 82: 22670978.png...
props length 9
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 6.632271070494657e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2313, 1219])
pixel level numpy Size:  (2313, 1219)
FileName 22670978.png
index! 2
image tensor Size:  torch.Size([1, 1, 2313, 1219])
pixel level numpy Size:  (2313, 1219)
FileName 22670978.png
index! 3
image tensor Size:  torch.Size([1, 1, 2313, 1219])
pixel level numpy Size:  (2313, 1219)
FileName 22670978.png
index! 4
image tensor Size:  torch.Size([1, 1, 2313, 1219])
pixel level numpy Size:  (2313, 1219)
FileName 22670978.png
index! 5
image tensor Size:  torch.Size([1, 1, 2313, 1219])
pixel level numpy Size:  (2313, 1219)
FileName 22670978.png
index! 6
image tensor Size:  torch.Size([1, 1, 2313, 1219])
pixel level numpy Size:  (2313, 1219)
FileName 22670978.png
index! 7
image tensor Size:  torch.Size([1, 1, 2313, 1219])
pixel level numpy Size:  (2313, 1219)
FileName 22670978.png
index! 8
image tensor Size:  torch.Size([1, 1, 2313, 1219])
pixel level numpy Size:  (2313, 1219)
FileName 22670978.png
index! 9
image tensor Size:  torch.Size([1, 1, 2313, 1219])
pixel level numpy Size:  (2313, 1219)
FileName 22670978.png
done
Finished evaluating radiograph: 24, consuming time: 4.7257s
The annotated calcification number is: 1
The number of the detected positive calcifications is: 9
score_threshold = 0.0000, recall_number = 0, FP_number = 9
score_threshold = 0.1000, recall_number = 0, FP_number = 9
score_threshold = 0.2000, recall_number = 0, FP_number = 9
score_threshold = 0.3000, recall_number = 0, FP_number = 9
score_threshold = 0.4000, recall_number = 0, FP_number = 9
score_threshold = 0.5000, recall_number = 0, FP_number = 9
score_threshold = 0.6000, recall_number = 0, FP_number = 9
score_threshold = 0.7000, recall_number = 0, FP_number = 9
score_threshold = 0.8000, recall_number = 0, FP_number = 9
score_threshold = 0.9000, recall_number = 0, FP_number = 9
score_threshold = 1.0000, recall_number = 0, FP_number = 9
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 26 out of 82: 22678449.png...
props length 13
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 4.765308553728854e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2798, 1245])
pixel level numpy Size:  (2798, 1245)
FileName 22678449.png
index! 2
image tensor Size:  torch.Size([1, 1, 2798, 1245])
pixel level numpy Size:  (2798, 1245)
FileName 22678449.png
index! 3
image tensor Size:  torch.Size([1, 1, 2798, 1245])
pixel level numpy Size:  (2798, 1245)
FileName 22678449.png
index! 4
image tensor Size:  torch.Size([1, 1, 2798, 1245])
pixel level numpy Size:  (2798, 1245)
FileName 22678449.png
index! 5
image tensor Size:  torch.Size([1, 1, 2798, 1245])
pixel level numpy Size:  (2798, 1245)
FileName 22678449.png
index! 6
image tensor Size:  torch.Size([1, 1, 2798, 1245])
pixel level numpy Size:  (2798, 1245)
FileName 22678449.png
index! 7
image tensor Size:  torch.Size([1, 1, 2798, 1245])
pixel level numpy Size:  (2798, 1245)
FileName 22678449.png
index! 8
image tensor Size:  torch.Size([1, 1, 2798, 1245])
pixel level numpy Size:  (2798, 1245)
FileName 22678449.png
index! 9
image tensor Size:  torch.Size([1, 1, 2798, 1245])
pixel level numpy Size:  (2798, 1245)
FileName 22678449.png
index! 10
image tensor Size:  torch.Size([1, 1, 2798, 1245])
pixel level numpy Size:  (2798, 1245)
FileName 22678449.png
index! 11
image tensor Size:  torch.Size([1, 1, 2798, 1245])
pixel level numpy Size:  (2798, 1245)
FileName 22678449.png
index! 12
image tensor Size:  torch.Size([1, 1, 2798, 1245])
pixel level numpy Size:  (2798, 1245)
FileName 22678449.png
index! 13
image tensor Size:  torch.Size([1, 1, 2798, 1245])
pixel level numpy Size:  (2798, 1245)
FileName 22678449.png
done
Finished evaluating radiograph: 25, consuming time: 6.0629s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 13
score_threshold = 0.0000, recall_number = 0, FP_number = 13
score_threshold = 0.1000, recall_number = 0, FP_number = 13
score_threshold = 0.2000, recall_number = 0, FP_number = 12
score_threshold = 0.3000, recall_number = 0, FP_number = 12
score_threshold = 0.4000, recall_number = 0, FP_number = 12
score_threshold = 0.5000, recall_number = 0, FP_number = 12
score_threshold = 0.6000, recall_number = 0, FP_number = 12
score_threshold = 0.7000, recall_number = 0, FP_number = 12
score_threshold = 0.8000, recall_number = 0, FP_number = 12
score_threshold = 0.9000, recall_number = 0, FP_number = 12
score_threshold = 1.0000, recall_number = 0, FP_number = 12
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 27 out of 82: 22678646.png...
props length 3
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 9.201445941505094e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2040, 895])
pixel level numpy Size:  (2040, 895)
FileName 22678646.png
index! 2
image tensor Size:  torch.Size([1, 1, 2040, 895])
pixel level numpy Size:  (2040, 895)
FileName 22678646.png
index! 3
image tensor Size:  torch.Size([1, 1, 2040, 895])
pixel level numpy Size:  (2040, 895)
FileName 22678646.png
done
Finished evaluating radiograph: 26, consuming time: 3.1238s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 3
score_threshold = 0.0000, recall_number = 0, FP_number = 3
score_threshold = 0.1000, recall_number = 0, FP_number = 0
score_threshold = 0.2000, recall_number = 0, FP_number = 0
score_threshold = 0.3000, recall_number = 0, FP_number = 0
score_threshold = 0.4000, recall_number = 0, FP_number = 0
score_threshold = 0.5000, recall_number = 0, FP_number = 0
score_threshold = 0.6000, recall_number = 0, FP_number = 0
score_threshold = 0.7000, recall_number = 0, FP_number = 0
score_threshold = 0.8000, recall_number = 0, FP_number = 0
score_threshold = 0.9000, recall_number = 0, FP_number = 0
score_threshold = 1.0000, recall_number = 0, FP_number = 0
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 28 out of 82: 22678694.png...
props length 2
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 5.4707967329326554e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2884, 900])
pixel level numpy Size:  (2884, 900)
FileName 22678694.png
index! 2
image tensor Size:  torch.Size([1, 1, 2884, 900])
pixel level numpy Size:  (2884, 900)
FileName 22678694.png
done
Finished evaluating radiograph: 27, consuming time: 3.4470s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 2
score_threshold = 0.0000, recall_number = 0, FP_number = 2
score_threshold = 0.1000, recall_number = 0, FP_number = 2
score_threshold = 0.2000, recall_number = 0, FP_number = 2
score_threshold = 0.3000, recall_number = 0, FP_number = 2
score_threshold = 0.4000, recall_number = 0, FP_number = 2
score_threshold = 0.5000, recall_number = 0, FP_number = 2
score_threshold = 0.6000, recall_number = 0, FP_number = 2
score_threshold = 0.7000, recall_number = 0, FP_number = 2
score_threshold = 0.8000, recall_number = 0, FP_number = 2
score_threshold = 0.9000, recall_number = 0, FP_number = 2
score_threshold = 1.0000, recall_number = 0, FP_number = 2
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 29 out of 82: 22678953.png...
props length 9
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 4.0170446293658323e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2969, 1635])
pixel level numpy Size:  (2969, 1635)
FileName 22678953.png
index! 2
image tensor Size:  torch.Size([1, 1, 2969, 1635])
pixel level numpy Size:  (2969, 1635)
FileName 22678953.png
index! 3
image tensor Size:  torch.Size([1, 1, 2969, 1635])
pixel level numpy Size:  (2969, 1635)
FileName 22678953.png
index! 4
image tensor Size:  torch.Size([1, 1, 2969, 1635])
pixel level numpy Size:  (2969, 1635)
FileName 22678953.png
index! 5
image tensor Size:  torch.Size([1, 1, 2969, 1635])
pixel level numpy Size:  (2969, 1635)
FileName 22678953.png
index! 6
image tensor Size:  torch.Size([1, 1, 2969, 1635])
pixel level numpy Size:  (2969, 1635)
FileName 22678953.png
index! 7
image tensor Size:  torch.Size([1, 1, 2969, 1635])
pixel level numpy Size:  (2969, 1635)
FileName 22678953.png
index! 8
image tensor Size:  torch.Size([1, 1, 2969, 1635])
pixel level numpy Size:  (2969, 1635)
FileName 22678953.png
index! 9
image tensor Size:  torch.Size([1, 1, 2969, 1635])
pixel level numpy Size:  (2969, 1635)
FileName 22678953.png
done
Finished evaluating radiograph: 28, consuming time: 7.5855s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 9
score_threshold = 0.0000, recall_number = 0, FP_number = 9
score_threshold = 0.1000, recall_number = 0, FP_number = 8
score_threshold = 0.2000, recall_number = 0, FP_number = 8
score_threshold = 0.3000, recall_number = 0, FP_number = 8
score_threshold = 0.4000, recall_number = 0, FP_number = 8
score_threshold = 0.5000, recall_number = 0, FP_number = 8
score_threshold = 0.6000, recall_number = 0, FP_number = 8
score_threshold = 0.7000, recall_number = 0, FP_number = 8
score_threshold = 0.8000, recall_number = 0, FP_number = 7
score_threshold = 0.9000, recall_number = 0, FP_number = 7
score_threshold = 1.0000, recall_number = 0, FP_number = 7
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 30 out of 82: 22678980.png...
props length 14
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 2.322293357948424e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3062, 1786])
pixel level numpy Size:  (3062, 1786)
FileName 22678980.png
index! 2
image tensor Size:  torch.Size([1, 1, 3062, 1786])
pixel level numpy Size:  (3062, 1786)
FileName 22678980.png
index! 3
image tensor Size:  torch.Size([1, 1, 3062, 1786])
pixel level numpy Size:  (3062, 1786)
FileName 22678980.png
index! 4
image tensor Size:  torch.Size([1, 1, 3062, 1786])
pixel level numpy Size:  (3062, 1786)
FileName 22678980.png
index! 5
image tensor Size:  torch.Size([1, 1, 3062, 1786])
pixel level numpy Size:  (3062, 1786)
FileName 22678980.png
index! 6
image tensor Size:  torch.Size([1, 1, 3062, 1786])
pixel level numpy Size:  (3062, 1786)
FileName 22678980.png
index! 7
image tensor Size:  torch.Size([1, 1, 3062, 1786])
pixel level numpy Size:  (3062, 1786)
FileName 22678980.png
index! 8
image tensor Size:  torch.Size([1, 1, 3062, 1786])
pixel level numpy Size:  (3062, 1786)
FileName 22678980.png
index! 9
image tensor Size:  torch.Size([1, 1, 3062, 1786])
pixel level numpy Size:  (3062, 1786)
FileName 22678980.png
index! 10
image tensor Size:  torch.Size([1, 1, 3062, 1786])
pixel level numpy Size:  (3062, 1786)
FileName 22678980.png
index! 11
image tensor Size:  torch.Size([1, 1, 3062, 1786])
pixel level numpy Size:  (3062, 1786)
FileName 22678980.png
index! 12
image tensor Size:  torch.Size([1, 1, 3062, 1786])
pixel level numpy Size:  (3062, 1786)
FileName 22678980.png
index! 13
image tensor Size:  torch.Size([1, 1, 3062, 1786])
pixel level numpy Size:  (3062, 1786)
FileName 22678980.png
index! 14
image tensor Size:  torch.Size([1, 1, 3062, 1786])
pixel level numpy Size:  (3062, 1786)
FileName 22678980.png
done
Finished evaluating radiograph: 29, consuming time: 8.8770s
The annotated calcification number is: 3
The number of the detected positive calcifications is: 14
score_threshold = 0.0000, recall_number = 0, FP_number = 14
score_threshold = 0.1000, recall_number = 0, FP_number = 13
score_threshold = 0.2000, recall_number = 0, FP_number = 13
score_threshold = 0.3000, recall_number = 0, FP_number = 13
score_threshold = 0.4000, recall_number = 0, FP_number = 13
score_threshold = 0.5000, recall_number = 0, FP_number = 13
score_threshold = 0.6000, recall_number = 0, FP_number = 13
score_threshold = 0.7000, recall_number = 0, FP_number = 13
score_threshold = 0.8000, recall_number = 0, FP_number = 13
score_threshold = 0.9000, recall_number = 0, FP_number = 13
score_threshold = 1.0000, recall_number = 0, FP_number = 13
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 31 out of 82: 22679008.png...
props length 14
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 2.494669415905757e-05
index! 1
image tensor Size:  torch.Size([1, 1, 4071, 1733])
pixel level numpy Size:  (4071, 1733)
FileName 22679008.png
index! 2
image tensor Size:  torch.Size([1, 1, 4071, 1733])
pixel level numpy Size:  (4071, 1733)
FileName 22679008.png
index! 3
image tensor Size:  torch.Size([1, 1, 4071, 1733])
pixel level numpy Size:  (4071, 1733)
FileName 22679008.png
index! 4
image tensor Size:  torch.Size([1, 1, 4071, 1733])
pixel level numpy Size:  (4071, 1733)
FileName 22679008.png
index! 5
image tensor Size:  torch.Size([1, 1, 4071, 1733])
pixel level numpy Size:  (4071, 1733)
FileName 22679008.png
index! 6
image tensor Size:  torch.Size([1, 1, 4071, 1733])
pixel level numpy Size:  (4071, 1733)
FileName 22679008.png
index! 7
image tensor Size:  torch.Size([1, 1, 4071, 1733])
pixel level numpy Size:  (4071, 1733)
FileName 22679008.png
index! 8
image tensor Size:  torch.Size([1, 1, 4071, 1733])
pixel level numpy Size:  (4071, 1733)
FileName 22679008.png
index! 9
image tensor Size:  torch.Size([1, 1, 4071, 1733])
pixel level numpy Size:  (4071, 1733)
FileName 22679008.png
index! 10
image tensor Size:  torch.Size([1, 1, 4071, 1733])
pixel level numpy Size:  (4071, 1733)
FileName 22679008.png
index! 11
image tensor Size:  torch.Size([1, 1, 4071, 1733])
pixel level numpy Size:  (4071, 1733)
FileName 22679008.png
index! 12
image tensor Size:  torch.Size([1, 1, 4071, 1733])
pixel level numpy Size:  (4071, 1733)
FileName 22679008.png
index! 13
image tensor Size:  torch.Size([1, 1, 4071, 1733])
pixel level numpy Size:  (4071, 1733)
FileName 22679008.png
index! 14
image tensor Size:  torch.Size([1, 1, 4071, 1733])
pixel level numpy Size:  (4071, 1733)
FileName 22679008.png
done
Finished evaluating radiograph: 30, consuming time: 11.0245s
The annotated calcification number is: 1
The number of the detected positive calcifications is: 14
score_threshold = 0.0000, recall_number = 0, FP_number = 14
score_threshold = 0.1000, recall_number = 0, FP_number = 12
score_threshold = 0.2000, recall_number = 0, FP_number = 12
score_threshold = 0.3000, recall_number = 0, FP_number = 11
score_threshold = 0.4000, recall_number = 0, FP_number = 11
score_threshold = 0.5000, recall_number = 0, FP_number = 11
score_threshold = 0.6000, recall_number = 0, FP_number = 11
score_threshold = 0.7000, recall_number = 0, FP_number = 11
score_threshold = 0.8000, recall_number = 0, FP_number = 11
score_threshold = 0.9000, recall_number = 0, FP_number = 11
score_threshold = 1.0000, recall_number = 0, FP_number = 11
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 32 out of 82: 22679036.png...
props length 15
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 2.135544249733057e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3660, 1740])
pixel level numpy Size:  (3660, 1740)
FileName 22679036.png
index! 2
image tensor Size:  torch.Size([1, 1, 3660, 1740])
pixel level numpy Size:  (3660, 1740)
FileName 22679036.png
index! 3
image tensor Size:  torch.Size([1, 1, 3660, 1740])
pixel level numpy Size:  (3660, 1740)
FileName 22679036.png
index! 4
image tensor Size:  torch.Size([1, 1, 3660, 1740])
pixel level numpy Size:  (3660, 1740)
FileName 22679036.png
index! 5
image tensor Size:  torch.Size([1, 1, 3660, 1740])
pixel level numpy Size:  (3660, 1740)
FileName 22679036.png
index! 6
image tensor Size:  torch.Size([1, 1, 3660, 1740])
pixel level numpy Size:  (3660, 1740)
FileName 22679036.png
index! 7
image tensor Size:  torch.Size([1, 1, 3660, 1740])
pixel level numpy Size:  (3660, 1740)
FileName 22679036.png
index! 8
image tensor Size:  torch.Size([1, 1, 3660, 1740])
pixel level numpy Size:  (3660, 1740)
FileName 22679036.png
index! 9
image tensor Size:  torch.Size([1, 1, 3660, 1740])
pixel level numpy Size:  (3660, 1740)
FileName 22679036.png
index! 10
image tensor Size:  torch.Size([1, 1, 3660, 1740])
pixel level numpy Size:  (3660, 1740)
FileName 22679036.png
index! 11
image tensor Size:  torch.Size([1, 1, 3660, 1740])
pixel level numpy Size:  (3660, 1740)
FileName 22679036.png
index! 12
image tensor Size:  torch.Size([1, 1, 3660, 1740])
pixel level numpy Size:  (3660, 1740)
FileName 22679036.png
index! 13
image tensor Size:  torch.Size([1, 1, 3660, 1740])
pixel level numpy Size:  (3660, 1740)
FileName 22679036.png
index! 14
image tensor Size:  torch.Size([1, 1, 3660, 1740])
pixel level numpy Size:  (3660, 1740)
FileName 22679036.png
index! 15
image tensor Size:  torch.Size([1, 1, 3660, 1740])
pixel level numpy Size:  (3660, 1740)
FileName 22679036.png
done
Finished evaluating radiograph: 31, consuming time: 10.9661s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 15
score_threshold = 0.0000, recall_number = 0, FP_number = 15
score_threshold = 0.1000, recall_number = 0, FP_number = 14
score_threshold = 0.2000, recall_number = 0, FP_number = 14
score_threshold = 0.3000, recall_number = 0, FP_number = 14
score_threshold = 0.4000, recall_number = 0, FP_number = 14
score_threshold = 0.5000, recall_number = 0, FP_number = 14
score_threshold = 0.6000, recall_number = 0, FP_number = 14
score_threshold = 0.7000, recall_number = 0, FP_number = 14
score_threshold = 0.8000, recall_number = 0, FP_number = 14
score_threshold = 0.9000, recall_number = 0, FP_number = 14
score_threshold = 1.0000, recall_number = 0, FP_number = 14
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 33 out of 82: 24055274.png...
props length 12
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 5.219209234346898e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3431, 1787])
pixel level numpy Size:  (3431, 1787)
FileName 24055274.png
index! 2
image tensor Size:  torch.Size([1, 1, 3431, 1787])
pixel level numpy Size:  (3431, 1787)
FileName 24055274.png
index! 3
image tensor Size:  torch.Size([1, 1, 3431, 1787])
pixel level numpy Size:  (3431, 1787)
FileName 24055274.png
index! 4
image tensor Size:  torch.Size([1, 1, 3431, 1787])
pixel level numpy Size:  (3431, 1787)
FileName 24055274.png
index! 5
image tensor Size:  torch.Size([1, 1, 3431, 1787])
pixel level numpy Size:  (3431, 1787)
FileName 24055274.png
index! 6
image tensor Size:  torch.Size([1, 1, 3431, 1787])
pixel level numpy Size:  (3431, 1787)
FileName 24055274.png
index! 7
image tensor Size:  torch.Size([1, 1, 3431, 1787])
pixel level numpy Size:  (3431, 1787)
FileName 24055274.png
index! 8
image tensor Size:  torch.Size([1, 1, 3431, 1787])
pixel level numpy Size:  (3431, 1787)
FileName 24055274.png
index! 9
image tensor Size:  torch.Size([1, 1, 3431, 1787])
pixel level numpy Size:  (3431, 1787)
FileName 24055274.png
index! 10
image tensor Size:  torch.Size([1, 1, 3431, 1787])
pixel level numpy Size:  (3431, 1787)
FileName 24055274.png
index! 11
image tensor Size:  torch.Size([1, 1, 3431, 1787])
pixel level numpy Size:  (3431, 1787)
FileName 24055274.png
index! 12
image tensor Size:  torch.Size([1, 1, 3431, 1787])
pixel level numpy Size:  (3431, 1787)
FileName 24055274.png
done
Finished evaluating radiograph: 32, consuming time: 10.0824s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 12
score_threshold = 0.0000, recall_number = 0, FP_number = 12
score_threshold = 0.1000, recall_number = 0, FP_number = 12
score_threshold = 0.2000, recall_number = 0, FP_number = 12
score_threshold = 0.3000, recall_number = 0, FP_number = 12
score_threshold = 0.4000, recall_number = 0, FP_number = 12
score_threshold = 0.5000, recall_number = 0, FP_number = 12
score_threshold = 0.6000, recall_number = 0, FP_number = 12
score_threshold = 0.7000, recall_number = 0, FP_number = 12
score_threshold = 0.8000, recall_number = 0, FP_number = 12
score_threshold = 0.9000, recall_number = 0, FP_number = 12
score_threshold = 1.0000, recall_number = 0, FP_number = 12
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 34 out of 82: 24055328.png...
props length 35
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 2.0360207276095127e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 2
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 3
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 4
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 5
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 6
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 7
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 8
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 9
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 10
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 11
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 12
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 13
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 14
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 15
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 16
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 17
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 18
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 19
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 20
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 21
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 22
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 23
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 24
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 25
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 26
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 27
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 28
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 29
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 30
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 31
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 32
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 33
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 34
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
index! 35
image tensor Size:  torch.Size([1, 1, 3531, 1850])
pixel level numpy Size:  (3531, 1850)
FileName 24055328.png
done
Finished evaluating radiograph: 33, consuming time: 14.9739s
The annotated calcification number is: 2
The number of the detected positive calcifications is: 35
score_threshold = 0.0000, recall_number = 0, FP_number = 35
score_threshold = 0.1000, recall_number = 0, FP_number = 33
score_threshold = 0.2000, recall_number = 0, FP_number = 33
score_threshold = 0.3000, recall_number = 0, FP_number = 33
score_threshold = 0.4000, recall_number = 0, FP_number = 32
score_threshold = 0.5000, recall_number = 0, FP_number = 31
score_threshold = 0.6000, recall_number = 0, FP_number = 31
score_threshold = 0.7000, recall_number = 0, FP_number = 31
score_threshold = 0.8000, recall_number = 0, FP_number = 31
score_threshold = 0.9000, recall_number = 0, FP_number = 31
score_threshold = 1.0000, recall_number = 0, FP_number = 31
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 35 out of 82: 24055502.png...
props length 5
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.079067701192564e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3575, 1826])
pixel level numpy Size:  (3575, 1826)
FileName 24055502.png
index! 2
image tensor Size:  torch.Size([1, 1, 3575, 1826])
pixel level numpy Size:  (3575, 1826)
FileName 24055502.png
index! 3
image tensor Size:  torch.Size([1, 1, 3575, 1826])
pixel level numpy Size:  (3575, 1826)
FileName 24055502.png
index! 4
image tensor Size:  torch.Size([1, 1, 3575, 1826])
pixel level numpy Size:  (3575, 1826)
FileName 24055502.png
index! 5
image tensor Size:  torch.Size([1, 1, 3575, 1826])
pixel level numpy Size:  (3575, 1826)
FileName 24055502.png
done
Finished evaluating radiograph: 34, consuming time: 11.3940s
The annotated calcification number is: 7
The number of the detected positive calcifications is: 5
score_threshold = 0.0000, recall_number = 0, FP_number = 5
score_threshold = 0.1000, recall_number = 0, FP_number = 5
score_threshold = 0.2000, recall_number = 0, FP_number = 5
score_threshold = 0.3000, recall_number = 0, FP_number = 5
score_threshold = 0.4000, recall_number = 0, FP_number = 5
score_threshold = 0.5000, recall_number = 0, FP_number = 5
score_threshold = 0.6000, recall_number = 0, FP_number = 5
score_threshold = 0.7000, recall_number = 0, FP_number = 5
score_threshold = 0.8000, recall_number = 0, FP_number = 5
score_threshold = 0.9000, recall_number = 0, FP_number = 5
score_threshold = 1.0000, recall_number = 0, FP_number = 5
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 36 out of 82: 24055573.png...
props length 28
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 2.3242625927411358e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 2
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 3
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 4
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 5
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 6
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 7
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 8
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 9
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 10
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 11
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 12
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 13
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 14
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 15
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 16
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 17
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 18
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 19
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 20
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 21
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 22
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 23
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 24
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 25
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 26
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 27
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
index! 28
image tensor Size:  torch.Size([1, 1, 3195, 1791])
pixel level numpy Size:  (3195, 1791)
FileName 24055573.png
done
Finished evaluating radiograph: 35, consuming time: 13.2134s
The annotated calcification number is: 2
The number of the detected positive calcifications is: 28
score_threshold = 0.0000, recall_number = 0, FP_number = 28
score_threshold = 0.1000, recall_number = 0, FP_number = 26
score_threshold = 0.2000, recall_number = 0, FP_number = 26
score_threshold = 0.3000, recall_number = 0, FP_number = 26
score_threshold = 0.4000, recall_number = 0, FP_number = 26
score_threshold = 0.5000, recall_number = 0, FP_number = 26
score_threshold = 0.6000, recall_number = 0, FP_number = 26
score_threshold = 0.7000, recall_number = 0, FP_number = 26
score_threshold = 0.8000, recall_number = 0, FP_number = 26
score_threshold = 0.9000, recall_number = 0, FP_number = 26
score_threshold = 1.0000, recall_number = 0, FP_number = 26
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 37 out of 82: 24055627.png...
props length 23
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 4.6542260840604686e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 2
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 3
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 4
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 5
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 6
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 7
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 8
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 9
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 10
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 11
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 12
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 13
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 14
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 15
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 16
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 17
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 18
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 19
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 20
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 21
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 22
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
index! 23
image tensor Size:  torch.Size([1, 1, 2679, 1596])
pixel level numpy Size:  (2679, 1596)
FileName 24055627.png
done
Finished evaluating radiograph: 36, consuming time: 11.4156s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 23
score_threshold = 0.0000, recall_number = 0, FP_number = 23
score_threshold = 0.1000, recall_number = 0, FP_number = 19
score_threshold = 0.2000, recall_number = 0, FP_number = 19
score_threshold = 0.3000, recall_number = 0, FP_number = 19
score_threshold = 0.4000, recall_number = 0, FP_number = 19
score_threshold = 0.5000, recall_number = 0, FP_number = 19
score_threshold = 0.6000, recall_number = 0, FP_number = 19
score_threshold = 0.7000, recall_number = 0, FP_number = 19
score_threshold = 0.8000, recall_number = 0, FP_number = 19
score_threshold = 0.9000, recall_number = 0, FP_number = 19
score_threshold = 1.0000, recall_number = 0, FP_number = 19
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 38 out of 82: 24058660.png...
props length 8
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 5.388921227297522e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3291, 2075])
pixel level numpy Size:  (3291, 2075)
FileName 24058660.png
index! 2
image tensor Size:  torch.Size([1, 1, 3291, 2075])
pixel level numpy Size:  (3291, 2075)
FileName 24058660.png
index! 3
image tensor Size:  torch.Size([1, 1, 3291, 2075])
pixel level numpy Size:  (3291, 2075)
FileName 24058660.png
index! 4
image tensor Size:  torch.Size([1, 1, 3291, 2075])
pixel level numpy Size:  (3291, 2075)
FileName 24058660.png
index! 5
image tensor Size:  torch.Size([1, 1, 3291, 2075])
pixel level numpy Size:  (3291, 2075)
FileName 24058660.png
index! 6
image tensor Size:  torch.Size([1, 1, 3291, 2075])
pixel level numpy Size:  (3291, 2075)
FileName 24058660.png
index! 7
image tensor Size:  torch.Size([1, 1, 3291, 2075])
pixel level numpy Size:  (3291, 2075)
FileName 24058660.png
index! 8
image tensor Size:  torch.Size([1, 1, 3291, 2075])
pixel level numpy Size:  (3291, 2075)
FileName 24058660.png
done
Finished evaluating radiograph: 37, consuming time: 12.4895s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 8
score_threshold = 0.0000, recall_number = 0, FP_number = 8
score_threshold = 0.1000, recall_number = 0, FP_number = 4
score_threshold = 0.2000, recall_number = 0, FP_number = 4
score_threshold = 0.3000, recall_number = 0, FP_number = 3
score_threshold = 0.4000, recall_number = 0, FP_number = 3
score_threshold = 0.5000, recall_number = 0, FP_number = 3
score_threshold = 0.6000, recall_number = 0, FP_number = 3
score_threshold = 0.7000, recall_number = 0, FP_number = 3
score_threshold = 0.8000, recall_number = 0, FP_number = 3
score_threshold = 0.9000, recall_number = 0, FP_number = 3
score_threshold = 1.0000, recall_number = 0, FP_number = 3
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 39 out of 82: 24065380.png...
props length 5
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 2.336022261815416e-05
index! 1
image tensor Size:  torch.Size([1, 1, 4071, 2061])
pixel level numpy Size:  (4071, 2061)
FileName 24065380.png
index! 2
image tensor Size:  torch.Size([1, 1, 4071, 2061])
pixel level numpy Size:  (4071, 2061)
FileName 24065380.png
index! 3
image tensor Size:  torch.Size([1, 1, 4071, 2061])
pixel level numpy Size:  (4071, 2061)
FileName 24065380.png
index! 4
image tensor Size:  torch.Size([1, 1, 4071, 2061])
pixel level numpy Size:  (4071, 2061)
FileName 24065380.png
index! 5
image tensor Size:  torch.Size([1, 1, 4071, 2061])
pixel level numpy Size:  (4071, 2061)
FileName 24065380.png
done
Finished evaluating radiograph: 38, consuming time: 15.4402s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 5
score_threshold = 0.0000, recall_number = 0, FP_number = 5
score_threshold = 0.1000, recall_number = 0, FP_number = 5
score_threshold = 0.2000, recall_number = 0, FP_number = 5
score_threshold = 0.3000, recall_number = 0, FP_number = 5
score_threshold = 0.4000, recall_number = 0, FP_number = 5
score_threshold = 0.5000, recall_number = 0, FP_number = 5
score_threshold = 0.6000, recall_number = 0, FP_number = 5
score_threshold = 0.7000, recall_number = 0, FP_number = 5
score_threshold = 0.8000, recall_number = 0, FP_number = 5
score_threshold = 0.9000, recall_number = 0, FP_number = 5
score_threshold = 1.0000, recall_number = 0, FP_number = 5
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 40 out of 82: 24065680.png...
props length 7
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 4.7954589939322764e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3275, 1248])
pixel level numpy Size:  (3275, 1248)
FileName 24065680.png
index! 2
image tensor Size:  torch.Size([1, 1, 3275, 1248])
pixel level numpy Size:  (3275, 1248)
FileName 24065680.png
index! 3
image tensor Size:  torch.Size([1, 1, 3275, 1248])
pixel level numpy Size:  (3275, 1248)
FileName 24065680.png
index! 4
image tensor Size:  torch.Size([1, 1, 3275, 1248])
pixel level numpy Size:  (3275, 1248)
FileName 24065680.png
index! 5
image tensor Size:  torch.Size([1, 1, 3275, 1248])
pixel level numpy Size:  (3275, 1248)
FileName 24065680.png
index! 6
image tensor Size:  torch.Size([1, 1, 3275, 1248])
pixel level numpy Size:  (3275, 1248)
FileName 24065680.png
index! 7
image tensor Size:  torch.Size([1, 1, 3275, 1248])
pixel level numpy Size:  (3275, 1248)
FileName 24065680.png
done
Finished evaluating radiograph: 39, consuming time: 8.7109s
The annotated calcification number is: 9
The number of the detected positive calcifications is: 7
score_threshold = 0.0000, recall_number = 0, FP_number = 7
score_threshold = 0.1000, recall_number = 0, FP_number = 7
score_threshold = 0.2000, recall_number = 0, FP_number = 7
score_threshold = 0.3000, recall_number = 0, FP_number = 7
score_threshold = 0.4000, recall_number = 0, FP_number = 7
score_threshold = 0.5000, recall_number = 0, FP_number = 7
score_threshold = 0.6000, recall_number = 0, FP_number = 7
score_threshold = 0.7000, recall_number = 0, FP_number = 7
score_threshold = 0.8000, recall_number = 0, FP_number = 7
score_threshold = 0.9000, recall_number = 0, FP_number = 7
score_threshold = 1.0000, recall_number = 0, FP_number = 7
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 41 out of 82: 30011530.png...
props length 21
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 5.3522215347994184e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 2
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 3
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 4
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 5
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 6
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 7
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 8
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 9
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 10
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 11
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 12
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 13
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 14
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 15
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 16
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 17
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 18
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 19
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 20
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
index! 21
image tensor Size:  torch.Size([1, 1, 3327, 994])
pixel level numpy Size:  (3327, 994)
FileName 30011530.png
done
Finished evaluating radiograph: 40, consuming time: 8.0154s
The annotated calcification number is: 1
The number of the detected positive calcifications is: 21
score_threshold = 0.0000, recall_number = 0, FP_number = 21
score_threshold = 0.1000, recall_number = 0, FP_number = 18
score_threshold = 0.2000, recall_number = 0, FP_number = 18
score_threshold = 0.3000, recall_number = 0, FP_number = 18
score_threshold = 0.4000, recall_number = 0, FP_number = 18
score_threshold = 0.5000, recall_number = 0, FP_number = 18
score_threshold = 0.6000, recall_number = 0, FP_number = 18
score_threshold = 0.7000, recall_number = 0, FP_number = 18
score_threshold = 0.8000, recall_number = 0, FP_number = 18
score_threshold = 0.9000, recall_number = 0, FP_number = 18
score_threshold = 1.0000, recall_number = 0, FP_number = 18
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 42 out of 82: 30011700.png...
props length 10
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 6.571277159512454e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2775, 1530])
pixel level numpy Size:  (2775, 1530)
FileName 30011700.png
index! 2
image tensor Size:  torch.Size([1, 1, 2775, 1530])
pixel level numpy Size:  (2775, 1530)
FileName 30011700.png
index! 3
image tensor Size:  torch.Size([1, 1, 2775, 1530])
pixel level numpy Size:  (2775, 1530)
FileName 30011700.png
index! 4
image tensor Size:  torch.Size([1, 1, 2775, 1530])
pixel level numpy Size:  (2775, 1530)
FileName 30011700.png
index! 5
image tensor Size:  torch.Size([1, 1, 2775, 1530])
pixel level numpy Size:  (2775, 1530)
FileName 30011700.png
index! 6
image tensor Size:  torch.Size([1, 1, 2775, 1530])
pixel level numpy Size:  (2775, 1530)
FileName 30011700.png
index! 7
image tensor Size:  torch.Size([1, 1, 2775, 1530])
pixel level numpy Size:  (2775, 1530)
FileName 30011700.png
index! 8
image tensor Size:  torch.Size([1, 1, 2775, 1530])
pixel level numpy Size:  (2775, 1530)
FileName 30011700.png
index! 9
image tensor Size:  torch.Size([1, 1, 2775, 1530])
pixel level numpy Size:  (2775, 1530)
FileName 30011700.png
index! 10
image tensor Size:  torch.Size([1, 1, 2775, 1530])
pixel level numpy Size:  (2775, 1530)
FileName 30011700.png
done
Finished evaluating radiograph: 41, consuming time: 8.8668s
The annotated calcification number is: 2
The number of the detected positive calcifications is: 10
score_threshold = 0.0000, recall_number = 0, FP_number = 10
score_threshold = 0.1000, recall_number = 0, FP_number = 7
score_threshold = 0.2000, recall_number = 0, FP_number = 5
score_threshold = 0.3000, recall_number = 0, FP_number = 5
score_threshold = 0.4000, recall_number = 0, FP_number = 5
score_threshold = 0.5000, recall_number = 0, FP_number = 5
score_threshold = 0.6000, recall_number = 0, FP_number = 5
score_threshold = 0.7000, recall_number = 0, FP_number = 5
score_threshold = 0.8000, recall_number = 0, FP_number = 5
score_threshold = 0.9000, recall_number = 0, FP_number = 5
score_threshold = 1.0000, recall_number = 0, FP_number = 5
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 43 out of 82: 30011824.png...
props length 15
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.450546885274069e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3211, 1769])
pixel level numpy Size:  (3211, 1769)
FileName 30011824.png
index! 2
image tensor Size:  torch.Size([1, 1, 3211, 1769])
pixel level numpy Size:  (3211, 1769)
FileName 30011824.png
index! 3
image tensor Size:  torch.Size([1, 1, 3211, 1769])
pixel level numpy Size:  (3211, 1769)
FileName 30011824.png
index! 4
image tensor Size:  torch.Size([1, 1, 3211, 1769])
pixel level numpy Size:  (3211, 1769)
FileName 30011824.png
index! 5
image tensor Size:  torch.Size([1, 1, 3211, 1769])
pixel level numpy Size:  (3211, 1769)
FileName 30011824.png
index! 6
image tensor Size:  torch.Size([1, 1, 3211, 1769])
pixel level numpy Size:  (3211, 1769)
FileName 30011824.png
index! 7
image tensor Size:  torch.Size([1, 1, 3211, 1769])
pixel level numpy Size:  (3211, 1769)
FileName 30011824.png
index! 8
image tensor Size:  torch.Size([1, 1, 3211, 1769])
pixel level numpy Size:  (3211, 1769)
FileName 30011824.png
index! 9
image tensor Size:  torch.Size([1, 1, 3211, 1769])
pixel level numpy Size:  (3211, 1769)
FileName 30011824.png
index! 10
image tensor Size:  torch.Size([1, 1, 3211, 1769])
pixel level numpy Size:  (3211, 1769)
FileName 30011824.png
index! 11
image tensor Size:  torch.Size([1, 1, 3211, 1769])
pixel level numpy Size:  (3211, 1769)
FileName 30011824.png
index! 12
image tensor Size:  torch.Size([1, 1, 3211, 1769])
pixel level numpy Size:  (3211, 1769)
FileName 30011824.png
index! 13
image tensor Size:  torch.Size([1, 1, 3211, 1769])
pixel level numpy Size:  (3211, 1769)
FileName 30011824.png
index! 14
image tensor Size:  torch.Size([1, 1, 3211, 1769])
pixel level numpy Size:  (3211, 1769)
FileName 30011824.png
index! 15
image tensor Size:  torch.Size([1, 1, 3211, 1769])
pixel level numpy Size:  (3211, 1769)
FileName 30011824.png
done
Finished evaluating radiograph: 42, consuming time: 10.5398s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 15
score_threshold = 0.0000, recall_number = 0, FP_number = 15
score_threshold = 0.1000, recall_number = 0, FP_number = 13
score_threshold = 0.2000, recall_number = 0, FP_number = 13
score_threshold = 0.3000, recall_number = 0, FP_number = 13
score_threshold = 0.4000, recall_number = 0, FP_number = 13
score_threshold = 0.5000, recall_number = 0, FP_number = 13
score_threshold = 0.6000, recall_number = 0, FP_number = 13
score_threshold = 0.7000, recall_number = 0, FP_number = 13
score_threshold = 0.8000, recall_number = 0, FP_number = 13
score_threshold = 0.9000, recall_number = 0, FP_number = 13
score_threshold = 1.0000, recall_number = 0, FP_number = 13
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 44 out of 82: 50993426.png...
props length 38
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 0.00012137250251348234
index! 1
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 2
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 3
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 4
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 5
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 6
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 7
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 8
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 9
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 10
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 11
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 12
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 13
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 14
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 15
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 16
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 17
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 18
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 19
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 20
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 21
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 22
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 23
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 24
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 25
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 26
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 27
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 28
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 29
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 30
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 31
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 32
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 33
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 34
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 35
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 36
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 37
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
index! 38
image tensor Size:  torch.Size([1, 1, 3299, 1471])
pixel level numpy Size:  (3299, 1471)
FileName 50993426.png
done
Finished evaluating radiograph: 43, consuming time: 14.7630s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 38
score_threshold = 0.0000, recall_number = 0, FP_number = 38
score_threshold = 0.1000, recall_number = 0, FP_number = 33
score_threshold = 0.2000, recall_number = 0, FP_number = 33
score_threshold = 0.3000, recall_number = 0, FP_number = 33
score_threshold = 0.4000, recall_number = 0, FP_number = 33
score_threshold = 0.5000, recall_number = 0, FP_number = 33
score_threshold = 0.6000, recall_number = 0, FP_number = 33
score_threshold = 0.7000, recall_number = 0, FP_number = 33
score_threshold = 0.8000, recall_number = 0, FP_number = 32
score_threshold = 0.9000, recall_number = 0, FP_number = 32
score_threshold = 1.0000, recall_number = 0, FP_number = 32
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 45 out of 82: 50993643.png...
props length 18
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.3300755079842994e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 2
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 3
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 4
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 5
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 6
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 7
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 8
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 9
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 10
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 11
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 12
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 13
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 14
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 15
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 16
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 17
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
index! 18
image tensor Size:  torch.Size([1, 1, 3212, 1580])
pixel level numpy Size:  (3212, 1580)
FileName 50993643.png
done
Finished evaluating radiograph: 44, consuming time: 9.8679s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 18
score_threshold = 0.0000, recall_number = 0, FP_number = 18
score_threshold = 0.1000, recall_number = 0, FP_number = 15
score_threshold = 0.2000, recall_number = 0, FP_number = 15
score_threshold = 0.3000, recall_number = 0, FP_number = 15
score_threshold = 0.4000, recall_number = 0, FP_number = 15
score_threshold = 0.5000, recall_number = 0, FP_number = 15
score_threshold = 0.6000, recall_number = 0, FP_number = 15
score_threshold = 0.7000, recall_number = 0, FP_number = 15
score_threshold = 0.8000, recall_number = 0, FP_number = 15
score_threshold = 0.9000, recall_number = 0, FP_number = 15
score_threshold = 1.0000, recall_number = 0, FP_number = 15
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 46 out of 82: 50993697.png...
props length 9
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 8.573784772455042e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3631, 1423])
pixel level numpy Size:  (3631, 1423)
FileName 50993697.png
index! 2
image tensor Size:  torch.Size([1, 1, 3631, 1423])
pixel level numpy Size:  (3631, 1423)
FileName 50993697.png
index! 3
image tensor Size:  torch.Size([1, 1, 3631, 1423])
pixel level numpy Size:  (3631, 1423)
FileName 50993697.png
index! 4
image tensor Size:  torch.Size([1, 1, 3631, 1423])
pixel level numpy Size:  (3631, 1423)
FileName 50993697.png
index! 5
image tensor Size:  torch.Size([1, 1, 3631, 1423])
pixel level numpy Size:  (3631, 1423)
FileName 50993697.png
index! 6
image tensor Size:  torch.Size([1, 1, 3631, 1423])
pixel level numpy Size:  (3631, 1423)
FileName 50993697.png
index! 7
image tensor Size:  torch.Size([1, 1, 3631, 1423])
pixel level numpy Size:  (3631, 1423)
FileName 50993697.png
index! 8
image tensor Size:  torch.Size([1, 1, 3631, 1423])
pixel level numpy Size:  (3631, 1423)
FileName 50993697.png
index! 9
image tensor Size:  torch.Size([1, 1, 3631, 1423])
pixel level numpy Size:  (3631, 1423)
FileName 50993697.png
done
Finished evaluating radiograph: 45, consuming time: 7.6410s
The annotated calcification number is: 1
The number of the detected positive calcifications is: 9
score_threshold = 0.0000, recall_number = 0, FP_number = 9
score_threshold = 0.1000, recall_number = 0, FP_number = 7
score_threshold = 0.2000, recall_number = 0, FP_number = 7
score_threshold = 0.3000, recall_number = 0, FP_number = 7
score_threshold = 0.4000, recall_number = 0, FP_number = 7
score_threshold = 0.5000, recall_number = 0, FP_number = 7
score_threshold = 0.6000, recall_number = 0, FP_number = 7
score_threshold = 0.7000, recall_number = 0, FP_number = 7
score_threshold = 0.8000, recall_number = 0, FP_number = 7
score_threshold = 0.9000, recall_number = 0, FP_number = 7
score_threshold = 1.0000, recall_number = 0, FP_number = 7
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 47 out of 82: 50993895.png...
props length 61
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.7953097823455276e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 2
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 3
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 4
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 5
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 6
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 7
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 8
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 9
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 10
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 11
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 12
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 13
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 14
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 15
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 16
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 17
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 18
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 19
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 20
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 21
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 22
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 23
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 24
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 25
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 26
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 27
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 28
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 29
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 30
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 31
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 32
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 33
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 34
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 35
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 36
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 37
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 38
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 39
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 40
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 41
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 42
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 43
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 44
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 45
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 46
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 47
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 48
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 49
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 50
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 51
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 52
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 53
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 54
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 55
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 56
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 57
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 58
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 59
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 60
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
index! 61
image tensor Size:  torch.Size([1, 1, 3327, 1378])
pixel level numpy Size:  (3327, 1378)
FileName 50993895.png
done
Finished evaluating radiograph: 46, consuming time: 16.4651s
The annotated calcification number is: 11
The number of the detected positive calcifications is: 61
score_threshold = 0.0000, recall_number = 0, FP_number = 61
score_threshold = 0.1000, recall_number = 0, FP_number = 59
score_threshold = 0.2000, recall_number = 0, FP_number = 59
score_threshold = 0.3000, recall_number = 0, FP_number = 59
score_threshold = 0.4000, recall_number = 0, FP_number = 59
score_threshold = 0.5000, recall_number = 0, FP_number = 59
score_threshold = 0.6000, recall_number = 0, FP_number = 59
score_threshold = 0.7000, recall_number = 0, FP_number = 59
score_threshold = 0.8000, recall_number = 0, FP_number = 59
score_threshold = 0.9000, recall_number = 0, FP_number = 59
score_threshold = 1.0000, recall_number = 0, FP_number = 59
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 48 out of 82: 50993976.png...
props length 53
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.4343955960290114e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 2
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 3
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 4
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 5
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 6
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 7
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 8
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 9
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 10
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 11
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 12
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 13
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 14
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 15
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 16
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 17
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 18
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 19
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 20
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 21
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 22
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 23
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 24
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 25
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 26
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 27
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 28
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 29
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 30
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 31
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 32
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 33
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 34
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 35
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 36
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 37
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 38
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 39
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 40
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 41
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 42
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 43
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 44
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 45
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 46
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 47
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 48
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 49
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 50
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 51
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 52
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
index! 53
image tensor Size:  torch.Size([1, 1, 2991, 1616])
pixel level numpy Size:  (2991, 1616)
FileName 50993976.png
done
Finished evaluating radiograph: 47, consuming time: 16.9322s
The annotated calcification number is: 2
The number of the detected positive calcifications is: 53
score_threshold = 0.0000, recall_number = 0, FP_number = 53
score_threshold = 0.1000, recall_number = 0, FP_number = 51
score_threshold = 0.2000, recall_number = 0, FP_number = 51
score_threshold = 0.3000, recall_number = 0, FP_number = 51
score_threshold = 0.4000, recall_number = 0, FP_number = 51
score_threshold = 0.5000, recall_number = 0, FP_number = 51
score_threshold = 0.6000, recall_number = 0, FP_number = 51
score_threshold = 0.7000, recall_number = 0, FP_number = 51
score_threshold = 0.8000, recall_number = 0, FP_number = 51
score_threshold = 0.9000, recall_number = 0, FP_number = 51
score_threshold = 1.0000, recall_number = 0, FP_number = 50
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 49 out of 82: 50994164.png...
props length 8
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 0.00011671572110017253
index! 1
image tensor Size:  torch.Size([1, 1, 2124, 835])
pixel level numpy Size:  (2124, 835)
FileName 50994164.png
index! 2
image tensor Size:  torch.Size([1, 1, 2124, 835])
pixel level numpy Size:  (2124, 835)
FileName 50994164.png
index! 3
image tensor Size:  torch.Size([1, 1, 2124, 835])
pixel level numpy Size:  (2124, 835)
FileName 50994164.png
index! 4
image tensor Size:  torch.Size([1, 1, 2124, 835])
pixel level numpy Size:  (2124, 835)
FileName 50994164.png
index! 5
image tensor Size:  torch.Size([1, 1, 2124, 835])
pixel level numpy Size:  (2124, 835)
FileName 50994164.png
index! 6
image tensor Size:  torch.Size([1, 1, 2124, 835])
pixel level numpy Size:  (2124, 835)
FileName 50994164.png
index! 7
image tensor Size:  torch.Size([1, 1, 2124, 835])
pixel level numpy Size:  (2124, 835)
FileName 50994164.png
index! 8
image tensor Size:  torch.Size([1, 1, 2124, 835])
pixel level numpy Size:  (2124, 835)
FileName 50994164.png
done
Finished evaluating radiograph: 48, consuming time: 4.1664s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 8
score_threshold = 0.0000, recall_number = 0, FP_number = 8
score_threshold = 0.1000, recall_number = 0, FP_number = 7
score_threshold = 0.2000, recall_number = 0, FP_number = 6
score_threshold = 0.3000, recall_number = 0, FP_number = 6
score_threshold = 0.4000, recall_number = 0, FP_number = 6
score_threshold = 0.5000, recall_number = 0, FP_number = 6
score_threshold = 0.6000, recall_number = 0, FP_number = 6
score_threshold = 0.7000, recall_number = 0, FP_number = 6
score_threshold = 0.8000, recall_number = 0, FP_number = 6
score_threshold = 0.9000, recall_number = 0, FP_number = 6
score_threshold = 1.0000, recall_number = 0, FP_number = 6
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 50 out of 82: 50994300.png...
props length 2
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 0.00013235878053443535
index! 1
image tensor Size:  torch.Size([1, 1, 1940, 701])
pixel level numpy Size:  (1940, 701)
FileName 50994300.png
index! 2
image tensor Size:  torch.Size([1, 1, 1940, 701])
pixel level numpy Size:  (1940, 701)
FileName 50994300.png
done
Finished evaluating radiograph: 49, consuming time: 2.5085s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 2
score_threshold = 0.0000, recall_number = 0, FP_number = 2
score_threshold = 0.1000, recall_number = 0, FP_number = 1
score_threshold = 0.2000, recall_number = 0, FP_number = 1
score_threshold = 0.3000, recall_number = 0, FP_number = 1
score_threshold = 0.4000, recall_number = 0, FP_number = 1
score_threshold = 0.5000, recall_number = 0, FP_number = 1
score_threshold = 0.6000, recall_number = 0, FP_number = 1
score_threshold = 0.7000, recall_number = 0, FP_number = 1
score_threshold = 0.8000, recall_number = 0, FP_number = 1
score_threshold = 0.9000, recall_number = 0, FP_number = 1
score_threshold = 1.0000, recall_number = 0, FP_number = 1
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 51 out of 82: 50995899.png...
props length 8
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 5.1722530237039745e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3101, 1328])
pixel level numpy Size:  (3101, 1328)
FileName 50995899.png
index! 2
image tensor Size:  torch.Size([1, 1, 3101, 1328])
pixel level numpy Size:  (3101, 1328)
FileName 50995899.png
index! 3
image tensor Size:  torch.Size([1, 1, 3101, 1328])
pixel level numpy Size:  (3101, 1328)
FileName 50995899.png
index! 4
image tensor Size:  torch.Size([1, 1, 3101, 1328])
pixel level numpy Size:  (3101, 1328)
FileName 50995899.png
index! 5
image tensor Size:  torch.Size([1, 1, 3101, 1328])
pixel level numpy Size:  (3101, 1328)
FileName 50995899.png
index! 6
image tensor Size:  torch.Size([1, 1, 3101, 1328])
pixel level numpy Size:  (3101, 1328)
FileName 50995899.png
index! 7
image tensor Size:  torch.Size([1, 1, 3101, 1328])
pixel level numpy Size:  (3101, 1328)
FileName 50995899.png
index! 8
image tensor Size:  torch.Size([1, 1, 3101, 1328])
pixel level numpy Size:  (3101, 1328)
FileName 50995899.png
done
Finished evaluating radiograph: 50, consuming time: 7.0446s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 8
score_threshold = 0.0000, recall_number = 0, FP_number = 8
score_threshold = 0.1000, recall_number = 0, FP_number = 7
score_threshold = 0.2000, recall_number = 0, FP_number = 7
score_threshold = 0.3000, recall_number = 0, FP_number = 7
score_threshold = 0.4000, recall_number = 0, FP_number = 7
score_threshold = 0.5000, recall_number = 0, FP_number = 7
score_threshold = 0.6000, recall_number = 0, FP_number = 7
score_threshold = 0.7000, recall_number = 0, FP_number = 7
score_threshold = 0.8000, recall_number = 0, FP_number = 7
score_threshold = 0.9000, recall_number = 0, FP_number = 7
score_threshold = 1.0000, recall_number = 0, FP_number = 7
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 52 out of 82: 50996083.png...
props length 30
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 2.748418371115497e-05
index! 1
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 2
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 3
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 4
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 5
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 6
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 7
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 8
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 9
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 10
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 11
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 12
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 13
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 14
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 15
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 16
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 17
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 18
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 19
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 20
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 21
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 22
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 23
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 24
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 25
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 26
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 27
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 28
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 29
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
index! 30
image tensor Size:  torch.Size([1, 1, 4071, 1573])
pixel level numpy Size:  (4071, 1573)
FileName 50996083.png
done
Finished evaluating radiograph: 51, consuming time: 13.0583s
The annotated calcification number is: 3
The number of the detected positive calcifications is: 30
score_threshold = 0.0000, recall_number = 0, FP_number = 30
score_threshold = 0.1000, recall_number = 0, FP_number = 23
score_threshold = 0.2000, recall_number = 0, FP_number = 22
score_threshold = 0.3000, recall_number = 0, FP_number = 22
score_threshold = 0.4000, recall_number = 0, FP_number = 22
score_threshold = 0.5000, recall_number = 0, FP_number = 22
score_threshold = 0.6000, recall_number = 0, FP_number = 22
score_threshold = 0.7000, recall_number = 0, FP_number = 22
score_threshold = 0.8000, recall_number = 0, FP_number = 22
score_threshold = 0.9000, recall_number = 0, FP_number = 22
score_threshold = 1.0000, recall_number = 0, FP_number = 22
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 53 out of 82: 50996201.png...
props length 28
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 4.4015668605301527e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 2
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 3
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 4
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 5
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 6
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 7
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 8
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 9
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 10
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 11
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 12
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 13
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 14
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 15
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 16
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 17
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 18
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 19
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 20
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 21
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 22
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 23
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 24
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 25
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 26
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 27
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
index! 28
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 50996201.png
done
Finished evaluating radiograph: 52, consuming time: 8.3102s
The annotated calcification number is: 3
The number of the detected positive calcifications is: 28
score_threshold = 0.0000, recall_number = 0, FP_number = 28
score_threshold = 0.1000, recall_number = 0, FP_number = 26
score_threshold = 0.2000, recall_number = 0, FP_number = 26
score_threshold = 0.3000, recall_number = 0, FP_number = 26
score_threshold = 0.4000, recall_number = 0, FP_number = 26
score_threshold = 0.5000, recall_number = 0, FP_number = 26
score_threshold = 0.6000, recall_number = 0, FP_number = 26
score_threshold = 0.7000, recall_number = 0, FP_number = 26
score_threshold = 0.8000, recall_number = 0, FP_number = 26
score_threshold = 0.9000, recall_number = 0, FP_number = 26
score_threshold = 1.0000, recall_number = 0, FP_number = 26
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 54 out of 82: 50996228.png...
props length 21
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 0.000115888841496647
index! 1
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 2
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 3
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 4
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 5
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 6
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 7
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 8
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 9
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 10
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 11
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 12
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 13
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 14
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 15
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 16
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 17
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 18
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 19
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 20
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
index! 21
image tensor Size:  torch.Size([1, 1, 2592, 1042])
pixel level numpy Size:  (2592, 1042)
FileName 50996228.png
done
Finished evaluating radiograph: 53, consuming time: 5.7391s
The annotated calcification number is: 6
The number of the detected positive calcifications is: 21
score_threshold = 0.0000, recall_number = 0, FP_number = 21
score_threshold = 0.1000, recall_number = 0, FP_number = 21
score_threshold = 0.2000, recall_number = 0, FP_number = 21
score_threshold = 0.3000, recall_number = 0, FP_number = 21
score_threshold = 0.4000, recall_number = 0, FP_number = 21
score_threshold = 0.5000, recall_number = 0, FP_number = 21
score_threshold = 0.6000, recall_number = 0, FP_number = 21
score_threshold = 0.7000, recall_number = 0, FP_number = 21
score_threshold = 0.8000, recall_number = 0, FP_number = 21
score_threshold = 0.9000, recall_number = 0, FP_number = 21
score_threshold = 1.0000, recall_number = 0, FP_number = 21
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 55 out of 82: 50997134.png...
props length 68
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.957961932609238e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 2
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 3
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 4
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 5
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 6
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 7
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 8
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 9
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 10
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 11
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 12
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 13
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 14
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 15
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 16
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 17
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 18
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 19
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 20
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 21
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 22
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 23
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 24
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 25
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 26
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 27
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 28
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 29
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 30
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 31
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 32
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 33
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 34
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 35
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 36
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 37
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 38
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 39
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 40
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 41
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 42
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 43
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 44
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 45
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 46
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 47
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 48
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 49
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 50
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 51
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 52
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 53
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 54
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 55
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 56
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 57
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 58
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 59
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 60
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 61
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 62
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 63
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 64
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 65
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 66
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 67
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
index! 68
image tensor Size:  torch.Size([1, 1, 3253, 1499])
pixel level numpy Size:  (3253, 1499)
FileName 50997134.png
done
Finished evaluating radiograph: 54, consuming time: 14.7522s
The annotated calcification number is: 1
The number of the detected positive calcifications is: 68
score_threshold = 0.0000, recall_number = 0, FP_number = 68
score_threshold = 0.1000, recall_number = 0, FP_number = 65
score_threshold = 0.2000, recall_number = 0, FP_number = 65
score_threshold = 0.3000, recall_number = 0, FP_number = 65
score_threshold = 0.4000, recall_number = 0, FP_number = 65
score_threshold = 0.5000, recall_number = 0, FP_number = 65
score_threshold = 0.6000, recall_number = 0, FP_number = 65
score_threshold = 0.7000, recall_number = 0, FP_number = 65
score_threshold = 0.8000, recall_number = 0, FP_number = 65
score_threshold = 0.9000, recall_number = 0, FP_number = 65
score_threshold = 1.0000, recall_number = 0, FP_number = 65
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 56 out of 82: 50997434.png...
props length 3
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 1.5920012198267126e-05
index! 1
image tensor Size:  torch.Size([1, 1, 4071, 2083])
pixel level numpy Size:  (4071, 2083)
FileName 50997434.png
index! 2
image tensor Size:  torch.Size([1, 1, 4071, 2083])
pixel level numpy Size:  (4071, 2083)
FileName 50997434.png
index! 3
image tensor Size:  torch.Size([1, 1, 4071, 2083])
pixel level numpy Size:  (4071, 2083)
FileName 50997434.png
done
Finished evaluating radiograph: 55, consuming time: 11.0042s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 3
score_threshold = 0.0000, recall_number = 0, FP_number = 3
score_threshold = 0.1000, recall_number = 0, FP_number = 2
score_threshold = 0.2000, recall_number = 0, FP_number = 2
score_threshold = 0.3000, recall_number = 0, FP_number = 2
score_threshold = 0.4000, recall_number = 0, FP_number = 2
score_threshold = 0.5000, recall_number = 0, FP_number = 2
score_threshold = 0.6000, recall_number = 0, FP_number = 2
score_threshold = 0.7000, recall_number = 0, FP_number = 2
score_threshold = 0.8000, recall_number = 0, FP_number = 2
score_threshold = 0.9000, recall_number = 0, FP_number = 2
score_threshold = 1.0000, recall_number = 0, FP_number = 2
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 57 out of 82: 50997488.png...
props length 7
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 2.5169896803423107e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2877, 2030])
pixel level numpy Size:  (2877, 2030)
FileName 50997488.png
index! 2
image tensor Size:  torch.Size([1, 1, 2877, 2030])
pixel level numpy Size:  (2877, 2030)
FileName 50997488.png
index! 3
image tensor Size:  torch.Size([1, 1, 2877, 2030])
pixel level numpy Size:  (2877, 2030)
FileName 50997488.png
index! 4
image tensor Size:  torch.Size([1, 1, 2877, 2030])
pixel level numpy Size:  (2877, 2030)
FileName 50997488.png
index! 5
image tensor Size:  torch.Size([1, 1, 2877, 2030])
pixel level numpy Size:  (2877, 2030)
FileName 50997488.png
index! 6
image tensor Size:  torch.Size([1, 1, 2877, 2030])
pixel level numpy Size:  (2877, 2030)
FileName 50997488.png
index! 7
image tensor Size:  torch.Size([1, 1, 2877, 2030])
pixel level numpy Size:  (2877, 2030)
FileName 50997488.png
done
Finished evaluating radiograph: 56, consuming time: 9.2246s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 7
score_threshold = 0.0000, recall_number = 0, FP_number = 7
score_threshold = 0.1000, recall_number = 0, FP_number = 3
score_threshold = 0.2000, recall_number = 0, FP_number = 3
score_threshold = 0.3000, recall_number = 0, FP_number = 3
score_threshold = 0.4000, recall_number = 0, FP_number = 3
score_threshold = 0.5000, recall_number = 0, FP_number = 3
score_threshold = 0.6000, recall_number = 0, FP_number = 3
score_threshold = 0.7000, recall_number = 0, FP_number = 2
score_threshold = 0.8000, recall_number = 0, FP_number = 2
score_threshold = 0.9000, recall_number = 0, FP_number = 2
score_threshold = 1.0000, recall_number = 0, FP_number = 2
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 58 out of 82: 50997624.png...
props length 46
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.8967263331180064e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 2
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 3
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 4
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 5
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 6
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 7
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 8
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 9
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 10
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 11
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 12
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 13
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 14
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 15
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 16
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 17
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 18
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 19
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 20
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 21
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 22
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 23
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 24
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 25
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 26
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 27
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 28
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 29
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 30
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 31
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 32
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 33
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 34
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 35
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 36
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 37
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 38
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 39
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 40
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 41
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 42
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 43
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 44
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 45
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
index! 46
image tensor Size:  torch.Size([1, 1, 3700, 1297])
pixel level numpy Size:  (3700, 1297)
FileName 50997624.png
done
Finished evaluating radiograph: 57, consuming time: 13.0575s
The annotated calcification number is: 6
The number of the detected positive calcifications is: 46
score_threshold = 0.0000, recall_number = 0, FP_number = 46
score_threshold = 0.1000, recall_number = 0, FP_number = 45
score_threshold = 0.2000, recall_number = 0, FP_number = 44
score_threshold = 0.3000, recall_number = 0, FP_number = 44
score_threshold = 0.4000, recall_number = 0, FP_number = 44
score_threshold = 0.5000, recall_number = 0, FP_number = 43
score_threshold = 0.6000, recall_number = 0, FP_number = 43
score_threshold = 0.7000, recall_number = 0, FP_number = 43
score_threshold = 0.8000, recall_number = 0, FP_number = 43
score_threshold = 0.9000, recall_number = 0, FP_number = 43
score_threshold = 1.0000, recall_number = 0, FP_number = 43
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 59 out of 82: 50997796.png...
props length 45
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 4.4769397254041156e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 2
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 3
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 4
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 5
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 6
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 7
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 8
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 9
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 10
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 11
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 12
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 13
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 14
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 15
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 16
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 17
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 18
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 19
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 20
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 21
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 22
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 23
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 24
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 25
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 26
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 27
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 28
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 29
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 30
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 31
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 32
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 33
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 34
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 35
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 36
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 37
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 38
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 39
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 40
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 41
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 42
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 43
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 44
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
index! 45
image tensor Size:  torch.Size([1, 1, 3189, 1632])
pixel level numpy Size:  (3189, 1632)
FileName 50997796.png
done
Finished evaluating radiograph: 58, consuming time: 12.7084s
The annotated calcification number is: 2
The number of the detected positive calcifications is: 45
score_threshold = 0.0000, recall_number = 0, FP_number = 45
score_threshold = 0.1000, recall_number = 0, FP_number = 35
score_threshold = 0.2000, recall_number = 0, FP_number = 34
score_threshold = 0.3000, recall_number = 0, FP_number = 34
score_threshold = 0.4000, recall_number = 0, FP_number = 34
score_threshold = 0.5000, recall_number = 0, FP_number = 33
score_threshold = 0.6000, recall_number = 0, FP_number = 33
score_threshold = 0.7000, recall_number = 0, FP_number = 33
score_threshold = 0.8000, recall_number = 0, FP_number = 33
score_threshold = 0.9000, recall_number = 0, FP_number = 33
score_threshold = 1.0000, recall_number = 0, FP_number = 33
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 60 out of 82: 50998349.png...
props length 11
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 6.11534234560071e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2687, 852])
pixel level numpy Size:  (2687, 852)
FileName 50998349.png
index! 2
image tensor Size:  torch.Size([1, 1, 2687, 852])
pixel level numpy Size:  (2687, 852)
FileName 50998349.png
index! 3
image tensor Size:  torch.Size([1, 1, 2687, 852])
pixel level numpy Size:  (2687, 852)
FileName 50998349.png
index! 4
image tensor Size:  torch.Size([1, 1, 2687, 852])
pixel level numpy Size:  (2687, 852)
FileName 50998349.png
index! 5
image tensor Size:  torch.Size([1, 1, 2687, 852])
pixel level numpy Size:  (2687, 852)
FileName 50998349.png
index! 6
image tensor Size:  torch.Size([1, 1, 2687, 852])
pixel level numpy Size:  (2687, 852)
FileName 50998349.png
index! 7
image tensor Size:  torch.Size([1, 1, 2687, 852])
pixel level numpy Size:  (2687, 852)
FileName 50998349.png
index! 8
image tensor Size:  torch.Size([1, 1, 2687, 852])
pixel level numpy Size:  (2687, 852)
FileName 50998349.png
index! 9
image tensor Size:  torch.Size([1, 1, 2687, 852])
pixel level numpy Size:  (2687, 852)
FileName 50998349.png
index! 10
image tensor Size:  torch.Size([1, 1, 2687, 852])
pixel level numpy Size:  (2687, 852)
FileName 50998349.png
index! 11
image tensor Size:  torch.Size([1, 1, 2687, 852])
pixel level numpy Size:  (2687, 852)
FileName 50998349.png
done
Finished evaluating radiograph: 59, consuming time: 5.1630s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 11
score_threshold = 0.0000, recall_number = 0, FP_number = 11
score_threshold = 0.1000, recall_number = 0, FP_number = 6
score_threshold = 0.2000, recall_number = 0, FP_number = 6
score_threshold = 0.3000, recall_number = 0, FP_number = 6
score_threshold = 0.4000, recall_number = 0, FP_number = 5
score_threshold = 0.5000, recall_number = 0, FP_number = 5
score_threshold = 0.6000, recall_number = 0, FP_number = 5
score_threshold = 0.7000, recall_number = 0, FP_number = 5
score_threshold = 0.8000, recall_number = 0, FP_number = 5
score_threshold = 0.9000, recall_number = 0, FP_number = 5
score_threshold = 1.0000, recall_number = 0, FP_number = 5
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 61 out of 82: 50999175.png...
props length 8
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 4.957706258608381e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2746, 1212])
pixel level numpy Size:  (2746, 1212)
FileName 50999175.png
index! 2
image tensor Size:  torch.Size([1, 1, 2746, 1212])
pixel level numpy Size:  (2746, 1212)
FileName 50999175.png
index! 3
image tensor Size:  torch.Size([1, 1, 2746, 1212])
pixel level numpy Size:  (2746, 1212)
FileName 50999175.png
index! 4
image tensor Size:  torch.Size([1, 1, 2746, 1212])
pixel level numpy Size:  (2746, 1212)
FileName 50999175.png
index! 5
image tensor Size:  torch.Size([1, 1, 2746, 1212])
pixel level numpy Size:  (2746, 1212)
FileName 50999175.png
index! 6
image tensor Size:  torch.Size([1, 1, 2746, 1212])
pixel level numpy Size:  (2746, 1212)
FileName 50999175.png
index! 7
image tensor Size:  torch.Size([1, 1, 2746, 1212])
pixel level numpy Size:  (2746, 1212)
FileName 50999175.png
index! 8
image tensor Size:  torch.Size([1, 1, 2746, 1212])
pixel level numpy Size:  (2746, 1212)
FileName 50999175.png
done
Finished evaluating radiograph: 60, consuming time: 5.2267s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 8
score_threshold = 0.0000, recall_number = 0, FP_number = 8
score_threshold = 0.1000, recall_number = 0, FP_number = 4
score_threshold = 0.2000, recall_number = 0, FP_number = 3
score_threshold = 0.3000, recall_number = 0, FP_number = 3
score_threshold = 0.4000, recall_number = 0, FP_number = 3
score_threshold = 0.5000, recall_number = 0, FP_number = 3
score_threshold = 0.6000, recall_number = 0, FP_number = 3
score_threshold = 0.7000, recall_number = 0, FP_number = 3
score_threshold = 0.8000, recall_number = 0, FP_number = 2
score_threshold = 0.9000, recall_number = 0, FP_number = 2
score_threshold = 1.0000, recall_number = 0, FP_number = 2
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 62 out of 82: 50999300.png...
props length 7
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 9.246064235742328e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2593, 1122])
pixel level numpy Size:  (2593, 1122)
FileName 50999300.png
index! 2
image tensor Size:  torch.Size([1, 1, 2593, 1122])
pixel level numpy Size:  (2593, 1122)
FileName 50999300.png
index! 3
image tensor Size:  torch.Size([1, 1, 2593, 1122])
pixel level numpy Size:  (2593, 1122)
FileName 50999300.png
index! 4
image tensor Size:  torch.Size([1, 1, 2593, 1122])
pixel level numpy Size:  (2593, 1122)
FileName 50999300.png
index! 5
image tensor Size:  torch.Size([1, 1, 2593, 1122])
pixel level numpy Size:  (2593, 1122)
FileName 50999300.png
index! 6
image tensor Size:  torch.Size([1, 1, 2593, 1122])
pixel level numpy Size:  (2593, 1122)
FileName 50999300.png
index! 7
image tensor Size:  torch.Size([1, 1, 2593, 1122])
pixel level numpy Size:  (2593, 1122)
FileName 50999300.png
done
Finished evaluating radiograph: 61, consuming time: 4.6601s
The annotated calcification number is: 1
The number of the detected positive calcifications is: 7
score_threshold = 0.0000, recall_number = 0, FP_number = 7
score_threshold = 0.1000, recall_number = 0, FP_number = 6
score_threshold = 0.2000, recall_number = 0, FP_number = 6
score_threshold = 0.3000, recall_number = 0, FP_number = 6
score_threshold = 0.4000, recall_number = 0, FP_number = 6
score_threshold = 0.5000, recall_number = 0, FP_number = 6
score_threshold = 0.6000, recall_number = 0, FP_number = 6
score_threshold = 0.7000, recall_number = 0, FP_number = 6
score_threshold = 0.8000, recall_number = 0, FP_number = 6
score_threshold = 0.9000, recall_number = 0, FP_number = 6
score_threshold = 1.0000, recall_number = 0, FP_number = 6
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 63 out of 82: 51049134.png...
props length 36
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 4.300216795835443e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 2
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 3
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 4
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 5
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 6
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 7
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 8
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 9
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 10
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 11
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 12
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 13
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 14
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 15
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 16
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 17
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 18
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 19
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 20
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 21
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 22
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 23
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 24
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 25
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 26
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 27
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 28
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 29
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 30
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 31
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 32
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 33
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 34
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 35
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
index! 36
image tensor Size:  torch.Size([1, 1, 3170, 1944])
pixel level numpy Size:  (3170, 1944)
FileName 51049134.png
done
Finished evaluating radiograph: 62, consuming time: 13.4084s
The annotated calcification number is: 5
The number of the detected positive calcifications is: 36
score_threshold = 0.0000, recall_number = 0, FP_number = 36
score_threshold = 0.1000, recall_number = 0, FP_number = 36
score_threshold = 0.2000, recall_number = 0, FP_number = 36
score_threshold = 0.3000, recall_number = 0, FP_number = 36
score_threshold = 0.4000, recall_number = 0, FP_number = 36
score_threshold = 0.5000, recall_number = 0, FP_number = 36
score_threshold = 0.6000, recall_number = 0, FP_number = 36
score_threshold = 0.7000, recall_number = 0, FP_number = 36
score_threshold = 0.8000, recall_number = 0, FP_number = 36
score_threshold = 0.9000, recall_number = 0, FP_number = 35
score_threshold = 1.0000, recall_number = 0, FP_number = 35
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 64 out of 82: 51049682.png...
props length 16
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 4.281940372165936e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
index! 2
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
index! 3
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
index! 4
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
index! 5
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
index! 6
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
index! 7
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
index! 8
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
index! 9
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
index! 10
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
index! 11
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
index! 12
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
index! 13
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
index! 14
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
index! 15
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
index! 16
image tensor Size:  torch.Size([1, 1, 3108, 1330])
pixel level numpy Size:  (3108, 1330)
FileName 51049682.png
done
Finished evaluating radiograph: 63, consuming time: 6.8829s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 16
score_threshold = 0.0000, recall_number = 0, FP_number = 16
score_threshold = 0.1000, recall_number = 0, FP_number = 16
score_threshold = 0.2000, recall_number = 0, FP_number = 16
score_threshold = 0.3000, recall_number = 0, FP_number = 16
score_threshold = 0.4000, recall_number = 0, FP_number = 16
score_threshold = 0.5000, recall_number = 0, FP_number = 16
score_threshold = 0.6000, recall_number = 0, FP_number = 16
score_threshold = 0.7000, recall_number = 0, FP_number = 16
score_threshold = 0.8000, recall_number = 0, FP_number = 16
score_threshold = 0.9000, recall_number = 0, FP_number = 16
score_threshold = 1.0000, recall_number = 0, FP_number = 16
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 65 out of 82: 53580692.png...
props length 23
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.224674717545808e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 2
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 3
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 4
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 5
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 6
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 7
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 8
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 9
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 10
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 11
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 12
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 13
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 14
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 15
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 16
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 17
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 18
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 19
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 20
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 21
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 22
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
index! 23
image tensor Size:  torch.Size([1, 1, 3241, 1751])
pixel level numpy Size:  (3241, 1751)
FileName 53580692.png
done
Finished evaluating radiograph: 64, consuming time: 12.1782s
The annotated calcification number is: 2
The number of the detected positive calcifications is: 23
score_threshold = 0.0000, recall_number = 0, FP_number = 23
score_threshold = 0.1000, recall_number = 0, FP_number = 19
score_threshold = 0.2000, recall_number = 0, FP_number = 18
score_threshold = 0.3000, recall_number = 0, FP_number = 18
score_threshold = 0.4000, recall_number = 0, FP_number = 18
score_threshold = 0.5000, recall_number = 0, FP_number = 18
score_threshold = 0.6000, recall_number = 0, FP_number = 18
score_threshold = 0.7000, recall_number = 0, FP_number = 18
score_threshold = 0.8000, recall_number = 0, FP_number = 18
score_threshold = 0.9000, recall_number = 0, FP_number = 17
score_threshold = 1.0000, recall_number = 0, FP_number = 17
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 66 out of 82: 53580831.png...
props length 12
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 9.831959404507811e-05
index! 1
image tensor Size:  torch.Size([1, 1, 4071, 1544])
pixel level numpy Size:  (4071, 1544)
FileName 53580831.png
index! 2
image tensor Size:  torch.Size([1, 1, 4071, 1544])
pixel level numpy Size:  (4071, 1544)
FileName 53580831.png
index! 3
image tensor Size:  torch.Size([1, 1, 4071, 1544])
pixel level numpy Size:  (4071, 1544)
FileName 53580831.png
index! 4
image tensor Size:  torch.Size([1, 1, 4071, 1544])
pixel level numpy Size:  (4071, 1544)
FileName 53580831.png
index! 5
image tensor Size:  torch.Size([1, 1, 4071, 1544])
pixel level numpy Size:  (4071, 1544)
FileName 53580831.png
index! 6
image tensor Size:  torch.Size([1, 1, 4071, 1544])
pixel level numpy Size:  (4071, 1544)
FileName 53580831.png
index! 7
image tensor Size:  torch.Size([1, 1, 4071, 1544])
pixel level numpy Size:  (4071, 1544)
FileName 53580831.png
index! 8
image tensor Size:  torch.Size([1, 1, 4071, 1544])
pixel level numpy Size:  (4071, 1544)
FileName 53580831.png
index! 9
image tensor Size:  torch.Size([1, 1, 4071, 1544])
pixel level numpy Size:  (4071, 1544)
FileName 53580831.png
index! 10
image tensor Size:  torch.Size([1, 1, 4071, 1544])
pixel level numpy Size:  (4071, 1544)
FileName 53580831.png
index! 11
image tensor Size:  torch.Size([1, 1, 4071, 1544])
pixel level numpy Size:  (4071, 1544)
FileName 53580831.png
index! 12
image tensor Size:  torch.Size([1, 1, 4071, 1544])
pixel level numpy Size:  (4071, 1544)
FileName 53580831.png
done
Finished evaluating radiograph: 65, consuming time: 10.3707s
The annotated calcification number is: 1
The number of the detected positive calcifications is: 12
score_threshold = 0.0000, recall_number = 0, FP_number = 12
score_threshold = 0.1000, recall_number = 0, FP_number = 12
score_threshold = 0.2000, recall_number = 0, FP_number = 12
score_threshold = 0.3000, recall_number = 0, FP_number = 12
score_threshold = 0.4000, recall_number = 0, FP_number = 12
score_threshold = 0.5000, recall_number = 0, FP_number = 12
score_threshold = 0.6000, recall_number = 0, FP_number = 12
score_threshold = 0.7000, recall_number = 0, FP_number = 12
score_threshold = 0.8000, recall_number = 0, FP_number = 12
score_threshold = 0.9000, recall_number = 0, FP_number = 12
score_threshold = 1.0000, recall_number = 0, FP_number = 12
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 67 out of 82: 53580858.png...
props length 21
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.890643243657349e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 2
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 3
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 4
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 5
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 6
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 7
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 8
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 9
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 10
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 11
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 12
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 13
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 14
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 15
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 16
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 17
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 18
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 19
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 20
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
index! 21
image tensor Size:  torch.Size([1, 1, 3322, 1501])
pixel level numpy Size:  (3322, 1501)
FileName 53580858.png
done
Finished evaluating radiograph: 66, consuming time: 9.3138s
The annotated calcification number is: 1
The number of the detected positive calcifications is: 21
score_threshold = 0.0000, recall_number = 0, FP_number = 21
score_threshold = 0.1000, recall_number = 0, FP_number = 20
score_threshold = 0.2000, recall_number = 0, FP_number = 20
score_threshold = 0.3000, recall_number = 0, FP_number = 20
score_threshold = 0.4000, recall_number = 0, FP_number = 20
score_threshold = 0.5000, recall_number = 0, FP_number = 20
score_threshold = 0.6000, recall_number = 0, FP_number = 20
score_threshold = 0.7000, recall_number = 0, FP_number = 20
score_threshold = 0.8000, recall_number = 0, FP_number = 20
score_threshold = 0.9000, recall_number = 0, FP_number = 20
score_threshold = 1.0000, recall_number = 0, FP_number = 20
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 68 out of 82: 53581006.png...
props length 5
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.833574872069138e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3327, 1278])
pixel level numpy Size:  (3327, 1278)
FileName 53581006.png
index! 2
image tensor Size:  torch.Size([1, 1, 3327, 1278])
pixel level numpy Size:  (3327, 1278)
FileName 53581006.png
index! 3
image tensor Size:  torch.Size([1, 1, 3327, 1278])
pixel level numpy Size:  (3327, 1278)
FileName 53581006.png
index! 4
image tensor Size:  torch.Size([1, 1, 3327, 1278])
pixel level numpy Size:  (3327, 1278)
FileName 53581006.png
index! 5
image tensor Size:  torch.Size([1, 1, 3327, 1278])
pixel level numpy Size:  (3327, 1278)
FileName 53581006.png
done
Finished evaluating radiograph: 67, consuming time: 6.3813s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 5
score_threshold = 0.0000, recall_number = 0, FP_number = 5
score_threshold = 0.1000, recall_number = 0, FP_number = 3
score_threshold = 0.2000, recall_number = 0, FP_number = 2
score_threshold = 0.3000, recall_number = 0, FP_number = 2
score_threshold = 0.4000, recall_number = 0, FP_number = 2
score_threshold = 0.5000, recall_number = 0, FP_number = 1
score_threshold = 0.6000, recall_number = 0, FP_number = 1
score_threshold = 0.7000, recall_number = 0, FP_number = 1
score_threshold = 0.8000, recall_number = 0, FP_number = 1
score_threshold = 0.9000, recall_number = 0, FP_number = 1
score_threshold = 1.0000, recall_number = 0, FP_number = 1
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 69 out of 82: 53581060.png...
props length 4
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 4.452990587997166e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2665, 1205])
pixel level numpy Size:  (2665, 1205)
FileName 53581060.png
index! 2
image tensor Size:  torch.Size([1, 1, 2665, 1205])
pixel level numpy Size:  (2665, 1205)
FileName 53581060.png
index! 3
image tensor Size:  torch.Size([1, 1, 2665, 1205])
pixel level numpy Size:  (2665, 1205)
FileName 53581060.png
index! 4
image tensor Size:  torch.Size([1, 1, 2665, 1205])
pixel level numpy Size:  (2665, 1205)
FileName 53581060.png
done
Finished evaluating radiograph: 68, consuming time: 4.8377s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 4
score_threshold = 0.0000, recall_number = 0, FP_number = 4
score_threshold = 0.1000, recall_number = 0, FP_number = 3
score_threshold = 0.2000, recall_number = 0, FP_number = 3
score_threshold = 0.3000, recall_number = 0, FP_number = 3
score_threshold = 0.4000, recall_number = 0, FP_number = 3
score_threshold = 0.5000, recall_number = 0, FP_number = 3
score_threshold = 0.6000, recall_number = 0, FP_number = 3
score_threshold = 0.7000, recall_number = 0, FP_number = 3
score_threshold = 0.8000, recall_number = 0, FP_number = 3
score_threshold = 0.9000, recall_number = 0, FP_number = 3
score_threshold = 1.0000, recall_number = 0, FP_number = 3
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 70 out of 82: 53581264.png...
props length 11
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 5.4445403274290316e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3028, 1292])
pixel level numpy Size:  (3028, 1292)
FileName 53581264.png
index! 2
image tensor Size:  torch.Size([1, 1, 3028, 1292])
pixel level numpy Size:  (3028, 1292)
FileName 53581264.png
index! 3
image tensor Size:  torch.Size([1, 1, 3028, 1292])
pixel level numpy Size:  (3028, 1292)
FileName 53581264.png
index! 4
image tensor Size:  torch.Size([1, 1, 3028, 1292])
pixel level numpy Size:  (3028, 1292)
FileName 53581264.png
index! 5
image tensor Size:  torch.Size([1, 1, 3028, 1292])
pixel level numpy Size:  (3028, 1292)
FileName 53581264.png
index! 6
image tensor Size:  torch.Size([1, 1, 3028, 1292])
pixel level numpy Size:  (3028, 1292)
FileName 53581264.png
index! 7
image tensor Size:  torch.Size([1, 1, 3028, 1292])
pixel level numpy Size:  (3028, 1292)
FileName 53581264.png
index! 8
image tensor Size:  torch.Size([1, 1, 3028, 1292])
pixel level numpy Size:  (3028, 1292)
FileName 53581264.png
index! 9
image tensor Size:  torch.Size([1, 1, 3028, 1292])
pixel level numpy Size:  (3028, 1292)
FileName 53581264.png
index! 10
image tensor Size:  torch.Size([1, 1, 3028, 1292])
pixel level numpy Size:  (3028, 1292)
FileName 53581264.png
index! 11
image tensor Size:  torch.Size([1, 1, 3028, 1292])
pixel level numpy Size:  (3028, 1292)
FileName 53581264.png
done
Finished evaluating radiograph: 69, consuming time: 6.6109s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 11
score_threshold = 0.0000, recall_number = 0, FP_number = 11
score_threshold = 0.1000, recall_number = 0, FP_number = 10
score_threshold = 0.2000, recall_number = 0, FP_number = 10
score_threshold = 0.3000, recall_number = 0, FP_number = 10
score_threshold = 0.4000, recall_number = 0, FP_number = 10
score_threshold = 0.5000, recall_number = 0, FP_number = 10
score_threshold = 0.6000, recall_number = 0, FP_number = 10
score_threshold = 0.7000, recall_number = 0, FP_number = 10
score_threshold = 0.8000, recall_number = 0, FP_number = 10
score_threshold = 0.9000, recall_number = 0, FP_number = 10
score_threshold = 1.0000, recall_number = 0, FP_number = 10
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 71 out of 82: 53581379.png...
props length 10
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.5093260339351826e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3140, 1452])
pixel level numpy Size:  (3140, 1452)
FileName 53581379.png
index! 2
image tensor Size:  torch.Size([1, 1, 3140, 1452])
pixel level numpy Size:  (3140, 1452)
FileName 53581379.png
index! 3
image tensor Size:  torch.Size([1, 1, 3140, 1452])
pixel level numpy Size:  (3140, 1452)
FileName 53581379.png
index! 4
image tensor Size:  torch.Size([1, 1, 3140, 1452])
pixel level numpy Size:  (3140, 1452)
FileName 53581379.png
index! 5
image tensor Size:  torch.Size([1, 1, 3140, 1452])
pixel level numpy Size:  (3140, 1452)
FileName 53581379.png
index! 6
image tensor Size:  torch.Size([1, 1, 3140, 1452])
pixel level numpy Size:  (3140, 1452)
FileName 53581379.png
index! 7
image tensor Size:  torch.Size([1, 1, 3140, 1452])
pixel level numpy Size:  (3140, 1452)
FileName 53581379.png
index! 8
image tensor Size:  torch.Size([1, 1, 3140, 1452])
pixel level numpy Size:  (3140, 1452)
FileName 53581379.png
index! 9
image tensor Size:  torch.Size([1, 1, 3140, 1452])
pixel level numpy Size:  (3140, 1452)
FileName 53581379.png
index! 10
image tensor Size:  torch.Size([1, 1, 3140, 1452])
pixel level numpy Size:  (3140, 1452)
FileName 53581379.png
done
Finished evaluating radiograph: 70, consuming time: 8.1678s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 10
score_threshold = 0.0000, recall_number = 0, FP_number = 10
score_threshold = 0.1000, recall_number = 0, FP_number = 6
score_threshold = 0.2000, recall_number = 0, FP_number = 6
score_threshold = 0.3000, recall_number = 0, FP_number = 5
score_threshold = 0.4000, recall_number = 0, FP_number = 5
score_threshold = 0.5000, recall_number = 0, FP_number = 5
score_threshold = 0.6000, recall_number = 0, FP_number = 5
score_threshold = 0.7000, recall_number = 0, FP_number = 5
score_threshold = 0.8000, recall_number = 0, FP_number = 5
score_threshold = 0.9000, recall_number = 0, FP_number = 5
score_threshold = 1.0000, recall_number = 0, FP_number = 5
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 72 out of 82: 53581460.png...
props length 3
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 9.191340507933108e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2949, 1140])
pixel level numpy Size:  (2949, 1140)
FileName 53581460.png
index! 2
image tensor Size:  torch.Size([1, 1, 2949, 1140])
pixel level numpy Size:  (2949, 1140)
FileName 53581460.png
index! 3
image tensor Size:  torch.Size([1, 1, 2949, 1140])
pixel level numpy Size:  (2949, 1140)
FileName 53581460.png
done
Finished evaluating radiograph: 71, consuming time: 5.1378s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 3
score_threshold = 0.0000, recall_number = 0, FP_number = 3
score_threshold = 0.1000, recall_number = 0, FP_number = 3
score_threshold = 0.2000, recall_number = 0, FP_number = 3
score_threshold = 0.3000, recall_number = 0, FP_number = 3
score_threshold = 0.4000, recall_number = 0, FP_number = 3
score_threshold = 0.5000, recall_number = 0, FP_number = 3
score_threshold = 0.6000, recall_number = 0, FP_number = 3
score_threshold = 0.7000, recall_number = 0, FP_number = 3
score_threshold = 0.8000, recall_number = 0, FP_number = 3
score_threshold = 0.9000, recall_number = 0, FP_number = 3
score_threshold = 1.0000, recall_number = 0, FP_number = 3
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 73 out of 82: 53581860.png...
props length 1
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 4.5245527570090754e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2902, 952])
pixel level numpy Size:  (2902, 952)
FileName 53581860.png
done
Finished evaluating radiograph: 72, consuming time: 3.9014s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 1
score_threshold = 0.0000, recall_number = 0, FP_number = 1
score_threshold = 0.1000, recall_number = 0, FP_number = 0
score_threshold = 0.2000, recall_number = 0, FP_number = 0
score_threshold = 0.3000, recall_number = 0, FP_number = 0
score_threshold = 0.4000, recall_number = 0, FP_number = 0
score_threshold = 0.5000, recall_number = 0, FP_number = 0
score_threshold = 0.6000, recall_number = 0, FP_number = 0
score_threshold = 0.7000, recall_number = 0, FP_number = 0
score_threshold = 0.8000, recall_number = 0, FP_number = 0
score_threshold = 0.9000, recall_number = 0, FP_number = 0
score_threshold = 1.0000, recall_number = 0, FP_number = 0
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 74 out of 82: 53581887.png...
props length 10
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 7.744306018169216e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3327, 1176])
pixel level numpy Size:  (3327, 1176)
FileName 53581887.png
index! 2
image tensor Size:  torch.Size([1, 1, 3327, 1176])
pixel level numpy Size:  (3327, 1176)
FileName 53581887.png
index! 3
image tensor Size:  torch.Size([1, 1, 3327, 1176])
pixel level numpy Size:  (3327, 1176)
FileName 53581887.png
index! 4
image tensor Size:  torch.Size([1, 1, 3327, 1176])
pixel level numpy Size:  (3327, 1176)
FileName 53581887.png
index! 5
image tensor Size:  torch.Size([1, 1, 3327, 1176])
pixel level numpy Size:  (3327, 1176)
FileName 53581887.png
index! 6
image tensor Size:  torch.Size([1, 1, 3327, 1176])
pixel level numpy Size:  (3327, 1176)
FileName 53581887.png
index! 7
image tensor Size:  torch.Size([1, 1, 3327, 1176])
pixel level numpy Size:  (3327, 1176)
FileName 53581887.png
index! 8
image tensor Size:  torch.Size([1, 1, 3327, 1176])
pixel level numpy Size:  (3327, 1176)
FileName 53581887.png
index! 9
image tensor Size:  torch.Size([1, 1, 3327, 1176])
pixel level numpy Size:  (3327, 1176)
FileName 53581887.png
index! 10
image tensor Size:  torch.Size([1, 1, 3327, 1176])
pixel level numpy Size:  (3327, 1176)
FileName 53581887.png
done
Finished evaluating radiograph: 73, consuming time: 5.9746s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 10
score_threshold = 0.0000, recall_number = 0, FP_number = 10
score_threshold = 0.1000, recall_number = 0, FP_number = 6
score_threshold = 0.2000, recall_number = 0, FP_number = 6
score_threshold = 0.3000, recall_number = 0, FP_number = 6
score_threshold = 0.4000, recall_number = 0, FP_number = 6
score_threshold = 0.5000, recall_number = 0, FP_number = 5
score_threshold = 0.6000, recall_number = 0, FP_number = 5
score_threshold = 0.7000, recall_number = 0, FP_number = 5
score_threshold = 0.8000, recall_number = 0, FP_number = 5
score_threshold = 0.9000, recall_number = 0, FP_number = 5
score_threshold = 1.0000, recall_number = 0, FP_number = 5
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 75 out of 82: 53582422.png...
props length 7
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 4.887927839594258e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 53582422.png
index! 2
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 53582422.png
index! 3
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 53582422.png
index! 4
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 53582422.png
index! 5
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 53582422.png
index! 6
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 53582422.png
index! 7
image tensor Size:  torch.Size([1, 1, 3327, 1236])
pixel level numpy Size:  (3327, 1236)
FileName 53582422.png
done
Finished evaluating radiograph: 74, consuming time: 6.8206s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 7
score_threshold = 0.0000, recall_number = 0, FP_number = 7
score_threshold = 0.1000, recall_number = 0, FP_number = 4
score_threshold = 0.2000, recall_number = 0, FP_number = 4
score_threshold = 0.3000, recall_number = 0, FP_number = 4
score_threshold = 0.4000, recall_number = 0, FP_number = 4
score_threshold = 0.5000, recall_number = 0, FP_number = 4
score_threshold = 0.6000, recall_number = 0, FP_number = 4
score_threshold = 0.7000, recall_number = 0, FP_number = 4
score_threshold = 0.8000, recall_number = 0, FP_number = 4
score_threshold = 0.9000, recall_number = 0, FP_number = 4
score_threshold = 1.0000, recall_number = 0, FP_number = 4
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 76 out of 82: 53582449.png...
props length 5
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 5.2869301079855476e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3071, 1084])
pixel level numpy Size:  (3071, 1084)
FileName 53582449.png
index! 2
image tensor Size:  torch.Size([1, 1, 3071, 1084])
pixel level numpy Size:  (3071, 1084)
FileName 53582449.png
index! 3
image tensor Size:  torch.Size([1, 1, 3071, 1084])
pixel level numpy Size:  (3071, 1084)
FileName 53582449.png
index! 4
image tensor Size:  torch.Size([1, 1, 3071, 1084])
pixel level numpy Size:  (3071, 1084)
FileName 53582449.png
index! 5
image tensor Size:  torch.Size([1, 1, 3071, 1084])
pixel level numpy Size:  (3071, 1084)
FileName 53582449.png
done
Finished evaluating radiograph: 75, consuming time: 4.9258s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 5
score_threshold = 0.0000, recall_number = 0, FP_number = 5
score_threshold = 0.1000, recall_number = 0, FP_number = 4
score_threshold = 0.2000, recall_number = 0, FP_number = 4
score_threshold = 0.3000, recall_number = 0, FP_number = 4
score_threshold = 0.4000, recall_number = 0, FP_number = 4
score_threshold = 0.5000, recall_number = 0, FP_number = 4
score_threshold = 0.6000, recall_number = 0, FP_number = 4
score_threshold = 0.7000, recall_number = 0, FP_number = 4
score_threshold = 0.8000, recall_number = 0, FP_number = 4
score_threshold = 0.9000, recall_number = 0, FP_number = 4
score_threshold = 1.0000, recall_number = 0, FP_number = 4
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 77 out of 82: 53582540.png...
props length 6
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 8.42968862574211e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3327, 1141])
pixel level numpy Size:  (3327, 1141)
FileName 53582540.png
index! 2
image tensor Size:  torch.Size([1, 1, 3327, 1141])
pixel level numpy Size:  (3327, 1141)
FileName 53582540.png
index! 3
image tensor Size:  torch.Size([1, 1, 3327, 1141])
pixel level numpy Size:  (3327, 1141)
FileName 53582540.png
index! 4
image tensor Size:  torch.Size([1, 1, 3327, 1141])
pixel level numpy Size:  (3327, 1141)
FileName 53582540.png
index! 5
image tensor Size:  torch.Size([1, 1, 3327, 1141])
pixel level numpy Size:  (3327, 1141)
FileName 53582540.png
index! 6
image tensor Size:  torch.Size([1, 1, 3327, 1141])
pixel level numpy Size:  (3327, 1141)
FileName 53582540.png
done
Finished evaluating radiograph: 76, consuming time: 6.0617s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 6
score_threshold = 0.0000, recall_number = 0, FP_number = 6
score_threshold = 0.1000, recall_number = 0, FP_number = 4
score_threshold = 0.2000, recall_number = 0, FP_number = 4
score_threshold = 0.3000, recall_number = 0, FP_number = 4
score_threshold = 0.4000, recall_number = 0, FP_number = 4
score_threshold = 0.5000, recall_number = 0, FP_number = 4
score_threshold = 0.6000, recall_number = 0, FP_number = 4
score_threshold = 0.7000, recall_number = 0, FP_number = 4
score_threshold = 0.8000, recall_number = 0, FP_number = 4
score_threshold = 0.9000, recall_number = 0, FP_number = 4
score_threshold = 1.0000, recall_number = 0, FP_number = 4
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 78 out of 82: 53582567.png...
props length 5
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 7.261574577488076e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2428, 1106])
pixel level numpy Size:  (2428, 1106)
FileName 53582567.png
index! 2
image tensor Size:  torch.Size([1, 1, 2428, 1106])
pixel level numpy Size:  (2428, 1106)
FileName 53582567.png
index! 3
image tensor Size:  torch.Size([1, 1, 2428, 1106])
pixel level numpy Size:  (2428, 1106)
FileName 53582567.png
index! 4
image tensor Size:  torch.Size([1, 1, 2428, 1106])
pixel level numpy Size:  (2428, 1106)
FileName 53582567.png
index! 5
image tensor Size:  torch.Size([1, 1, 2428, 1106])
pixel level numpy Size:  (2428, 1106)
FileName 53582567.png
done
Finished evaluating radiograph: 77, consuming time: 4.1794s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 5
score_threshold = 0.0000, recall_number = 0, FP_number = 5
score_threshold = 0.1000, recall_number = 0, FP_number = 5
score_threshold = 0.2000, recall_number = 0, FP_number = 5
score_threshold = 0.3000, recall_number = 0, FP_number = 5
score_threshold = 0.4000, recall_number = 0, FP_number = 5
score_threshold = 0.5000, recall_number = 0, FP_number = 5
score_threshold = 0.6000, recall_number = 0, FP_number = 5
score_threshold = 0.7000, recall_number = 0, FP_number = 5
score_threshold = 0.8000, recall_number = 0, FP_number = 5
score_threshold = 0.9000, recall_number = 0, FP_number = 5
score_threshold = 1.0000, recall_number = 0, FP_number = 5
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 79 out of 82: 53582683.png...
props length 14
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 8.958776679044476e-05
index! 1
image tensor Size:  torch.Size([1, 1, 2777, 1029])
pixel level numpy Size:  (2777, 1029)
FileName 53582683.png
index! 2
image tensor Size:  torch.Size([1, 1, 2777, 1029])
pixel level numpy Size:  (2777, 1029)
FileName 53582683.png
index! 3
image tensor Size:  torch.Size([1, 1, 2777, 1029])
pixel level numpy Size:  (2777, 1029)
FileName 53582683.png
index! 4
image tensor Size:  torch.Size([1, 1, 2777, 1029])
pixel level numpy Size:  (2777, 1029)
FileName 53582683.png
index! 5
image tensor Size:  torch.Size([1, 1, 2777, 1029])
pixel level numpy Size:  (2777, 1029)
FileName 53582683.png
index! 6
image tensor Size:  torch.Size([1, 1, 2777, 1029])
pixel level numpy Size:  (2777, 1029)
FileName 53582683.png
index! 7
image tensor Size:  torch.Size([1, 1, 2777, 1029])
pixel level numpy Size:  (2777, 1029)
FileName 53582683.png
index! 8
image tensor Size:  torch.Size([1, 1, 2777, 1029])
pixel level numpy Size:  (2777, 1029)
FileName 53582683.png
index! 9
image tensor Size:  torch.Size([1, 1, 2777, 1029])
pixel level numpy Size:  (2777, 1029)
FileName 53582683.png
index! 10
image tensor Size:  torch.Size([1, 1, 2777, 1029])
pixel level numpy Size:  (2777, 1029)
FileName 53582683.png
index! 11
image tensor Size:  torch.Size([1, 1, 2777, 1029])
pixel level numpy Size:  (2777, 1029)
FileName 53582683.png
index! 12
image tensor Size:  torch.Size([1, 1, 2777, 1029])
pixel level numpy Size:  (2777, 1029)
FileName 53582683.png
index! 13
image tensor Size:  torch.Size([1, 1, 2777, 1029])
pixel level numpy Size:  (2777, 1029)
FileName 53582683.png
index! 14
image tensor Size:  torch.Size([1, 1, 2777, 1029])
pixel level numpy Size:  (2777, 1029)
FileName 53582683.png
done
Finished evaluating radiograph: 78, consuming time: 4.8722s
The annotated calcification number is: 16
The number of the detected positive calcifications is: 14
score_threshold = 0.0000, recall_number = 0, FP_number = 14
score_threshold = 0.1000, recall_number = 0, FP_number = 12
score_threshold = 0.2000, recall_number = 0, FP_number = 12
score_threshold = 0.3000, recall_number = 0, FP_number = 12
score_threshold = 0.4000, recall_number = 0, FP_number = 12
score_threshold = 0.5000, recall_number = 0, FP_number = 12
score_threshold = 0.6000, recall_number = 0, FP_number = 12
score_threshold = 0.7000, recall_number = 0, FP_number = 12
score_threshold = 0.8000, recall_number = 0, FP_number = 12
score_threshold = 0.9000, recall_number = 0, FP_number = 12
score_threshold = 1.0000, recall_number = 0, FP_number = 11
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 80 out of 82: 53582764.png...
props length 22
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 3.1168960702174345e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 2
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 3
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 4
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 5
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 6
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 7
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 8
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 9
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 10
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 11
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 12
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 13
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 14
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 15
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 16
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 17
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 18
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 19
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 20
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 21
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
index! 22
image tensor Size:  torch.Size([1, 1, 3168, 1671])
pixel level numpy Size:  (3168, 1671)
FileName 53582764.png
done
Finished evaluating radiograph: 79, consuming time: 9.8854s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 22
score_threshold = 0.0000, recall_number = 0, FP_number = 22
score_threshold = 0.1000, recall_number = 0, FP_number = 19
score_threshold = 0.2000, recall_number = 0, FP_number = 19
score_threshold = 0.3000, recall_number = 0, FP_number = 19
score_threshold = 0.4000, recall_number = 0, FP_number = 19
score_threshold = 0.5000, recall_number = 0, FP_number = 19
score_threshold = 0.6000, recall_number = 0, FP_number = 19
score_threshold = 0.7000, recall_number = 0, FP_number = 19
score_threshold = 0.8000, recall_number = 0, FP_number = 19
score_threshold = 0.9000, recall_number = 0, FP_number = 19
score_threshold = 1.0000, recall_number = 0, FP_number = 19
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 81 out of 82: 53587599.png...
props length 23
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 2.793438815829e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 2
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 3
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 4
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 5
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 6
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 7
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 8
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 9
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 10
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 11
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 12
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 13
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 14
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 15
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 16
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 17
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 18
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 19
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 20
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 21
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 22
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
index! 23
image tensor Size:  torch.Size([1, 1, 3657, 1948])
pixel level numpy Size:  (3657, 1948)
FileName 53587599.png
done
Finished evaluating radiograph: 80, consuming time: 12.7428s
The annotated calcification number is: 4
The number of the detected positive calcifications is: 23
score_threshold = 0.0000, recall_number = 0, FP_number = 23
score_threshold = 0.1000, recall_number = 0, FP_number = 20
score_threshold = 0.2000, recall_number = 0, FP_number = 20
score_threshold = 0.3000, recall_number = 0, FP_number = 20
score_threshold = 0.4000, recall_number = 0, FP_number = 20
score_threshold = 0.5000, recall_number = 0, FP_number = 20
score_threshold = 0.6000, recall_number = 0, FP_number = 20
score_threshold = 0.7000, recall_number = 0, FP_number = 20
score_threshold = 0.8000, recall_number = 0, FP_number = 20
score_threshold = 0.9000, recall_number = 0, FP_number = 20
score_threshold = 1.0000, recall_number = 0, FP_number = 20
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
Start evaluating radiograph 82 out of 82: 53587690.png...
props length 17
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
percentage: 1.8681381847444963e-05
index! 1
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 2
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 3
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 4
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 5
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 6
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 7
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 8
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 9
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 10
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 11
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 12
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 13
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 14
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 15
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 16
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
index! 17
image tensor Size:  torch.Size([1, 1, 3600, 1933])
pixel level numpy Size:  (3600, 1933)
FileName 53587690.png
done
Finished evaluating radiograph: 81, consuming time: 11.9469s
The annotated calcification number is: 0
The number of the detected positive calcifications is: 17
score_threshold = 0.0000, recall_number = 0, FP_number = 17
score_threshold = 0.1000, recall_number = 0, FP_number = 12
score_threshold = 0.2000, recall_number = 0, FP_number = 12
score_threshold = 0.3000, recall_number = 0, FP_number = 12
score_threshold = 0.4000, recall_number = 0, FP_number = 11
score_threshold = 0.5000, recall_number = 0, FP_number = 11
score_threshold = 0.6000, recall_number = 0, FP_number = 11
score_threshold = 0.7000, recall_number = 0, FP_number = 11
score_threshold = 0.8000, recall_number = 0, FP_number = 11
score_threshold = 0.9000, recall_number = 0, FP_number = 11
score_threshold = 1.0000, recall_number = 0, FP_number = 11
--------------------------------------------------------------------------------------
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
Finished evaluating this dataset, consuming time: 942.7206s
The annotated calcification number is: 103
The number of the detected positive calcifications is: 1335
score_threshold = 0.0000, recall_number = 0, FP_number = 1335
score_threshold = 0.1000, recall_number = 0, FP_number = 1153
score_threshold = 0.2000, recall_number = 0, FP_number = 1139
score_threshold = 0.3000, recall_number = 0, FP_number = 1136
score_threshold = 0.4000, recall_number = 0, FP_number = 1131
score_threshold = 0.5000, recall_number = 0, FP_number = 1125
score_threshold = 0.6000, recall_number = 0, FP_number = 1123
score_threshold = 0.7000, recall_number = 0, FP_number = 1122
score_threshold = 0.8000, recall_number = 0, FP_number = 1119
score_threshold = 0.9000, recall_number = 0, FP_number = 1117
score_threshold = 1.0000, recall_number = 0, FP_number = 1115
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
